#
# DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
#

from .libcefdef import *
from .cef_base_ref_counted_t import *
from .cef_base_scoped_t import *
from .cef_string_list import *
from .cef_string_map import *
from .cef_string_multimap import *
from .cef_string_t import *
from .cef_string_userfree import *

from .Enums import *
from .Exceptions import *
from .Extensions import *
#from .Handlers import *
from .Platform import *
from .Proxies import *
from .Structs import *
from .Wrapper import *

class cef_accessibility_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t))(self.OnAccessibilityTreeChange),
            CEFCALLBACK(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t))(self.OnAccessibilityLocationChange),
        ]
        self._on_accessibility_tree_change = self._callbacks[0]
        self._on_accessibility_location_change = self._callbacks[1]


class cef_app_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_app_t), POINTER(cef_string_t), POINTER(cef_command_line_t))(self.OnBeforeCommandLineProcessing),
            CEFCALLBACK(c_void, POINTER(cef_app_t), POINTER(cef_scheme_registrar_t))(self.OnRegisterCustomSchemes),
            CEFCALLBACK(POINTER(cef_resource_bundle_handler_t), POINTER(cef_app_t))(self.GetResourceBundleHandler),
            CEFCALLBACK(POINTER(cef_browser_process_handler_t), POINTER(cef_app_t))(self.GetBrowserProcessHandler),
            CEFCALLBACK(POINTER(cef_render_process_handler_t), POINTER(cef_app_t))(self.GetRenderProcessHandler),
        ]
        self._on_before_command_line_processing = self._callbacks[0]
        self._on_register_custom_schemes = self._callbacks[1]
        self._get_resource_bundle_handler = self._callbacks[2]
        self._get_browser_process_handler = self._callbacks[3]
        self._get_render_process_handler = self._callbacks[4]


class cef_audio_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t))(self.GetAudioParameters),
            CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t), c_int)(self.OnAudioStreamStarted),
            CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(POINTER(c_float)), c_int, c_long)(self.OnAudioStreamPacket),
            CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t))(self.OnAudioStreamStopped),
            CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))(self.OnAudioStreamError),
        ]
        self._get_audio_parameters = self._callbacks[0]
        self._on_audio_stream_started = self._callbacks[1]
        self._on_audio_stream_packet = self._callbacks[2]
        self._on_audio_stream_stopped = self._callbacks[3]
        self._on_audio_stream_error = self._callbacks[4]


class cef_auth_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_browser_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_run_file_dialog_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_run_file_dialog_callback_t), cef_string_list_t)(self.OnFileDialogDismissed),
        ]
        self._on_file_dialog_dismissed = self._callbacks[0]


class cef_navigation_entry_visitor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_navigation_entry_visitor_t), POINTER(cef_navigation_entry_t), c_int, c_int, c_int)(self.Visit),
        ]
        self._visit = self._callbacks[0]


class cef_pdf_print_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_pdf_print_callback_t), POINTER(cef_string_t), c_int)(self.OnPdfPrintFinished),
        ]
        self._on_pdf_print_finished = self._callbacks[0]


class cef_download_image_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_download_image_callback_t), POINTER(cef_string_t), c_int, POINTER(cef_image_t))(self.OnDownloadImageFinished),
        ]
        self._on_download_image_finished = self._callbacks[0]


class cef_browser_host_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_browser_process_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t))(self.OnContextInitialized),
            CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t), POINTER(cef_command_line_t))(self.OnBeforeChildProcessLaunch),
            CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t), c_long)(self.OnScheduleMessagePumpWork),
            CEFCALLBACK(POINTER(cef_client_t), POINTER(cef_browser_process_handler_t))(self.GetDefaultClient),
        ]
        self._on_context_initialized = self._callbacks[0]
        self._on_before_child_process_launch = self._callbacks[1]
        self._on_schedule_message_pump_work = self._callbacks[2]
        self._get_default_client = self._callbacks[3]


class cef_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_completion_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_completion_callback_t))(self.OnComplete),
        ]
        self._on_complete = self._callbacks[0]


class cef_client_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(POINTER(cef_audio_handler_t), POINTER(cef_client_t))(self.GetAudioHandler),
            CEFCALLBACK(POINTER(cef_command_handler_t), POINTER(cef_client_t))(self.GetCommandHandler),
            CEFCALLBACK(POINTER(cef_context_menu_handler_t), POINTER(cef_client_t))(self.GetContextMenuHandler),
            CEFCALLBACK(POINTER(cef_dialog_handler_t), POINTER(cef_client_t))(self.GetDialogHandler),
            CEFCALLBACK(POINTER(cef_display_handler_t), POINTER(cef_client_t))(self.GetDisplayHandler),
            CEFCALLBACK(POINTER(cef_download_handler_t), POINTER(cef_client_t))(self.GetDownloadHandler),
            CEFCALLBACK(POINTER(cef_drag_handler_t), POINTER(cef_client_t))(self.GetDragHandler),
            CEFCALLBACK(POINTER(cef_find_handler_t), POINTER(cef_client_t))(self.GetFindHandler),
            CEFCALLBACK(POINTER(cef_focus_handler_t), POINTER(cef_client_t))(self.GetFocusHandler),
            CEFCALLBACK(POINTER(cef_frame_handler_t), POINTER(cef_client_t))(self.GetFrameHandler),
            CEFCALLBACK(POINTER(cef_jsdialog_handler_t), POINTER(cef_client_t))(self.GetJSDialogHandler),
            CEFCALLBACK(POINTER(cef_keyboard_handler_t), POINTER(cef_client_t))(self.GetKeyboardHandler),
            CEFCALLBACK(POINTER(cef_life_span_handler_t), POINTER(cef_client_t))(self.GetLifeSpanHandler),
            CEFCALLBACK(POINTER(cef_load_handler_t), POINTER(cef_client_t))(self.GetLoadHandler),
            CEFCALLBACK(POINTER(cef_print_handler_t), POINTER(cef_client_t))(self.GetPrintHandler),
            CEFCALLBACK(POINTER(cef_render_handler_t), POINTER(cef_client_t))(self.GetRenderHandler),
            CEFCALLBACK(POINTER(cef_request_handler_t), POINTER(cef_client_t))(self.GetRequestHandler),
            CEFCALLBACK(c_int, POINTER(cef_client_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefProcessId, POINTER(cef_process_message_t))(self.OnProcessMessageReceived),
        ]
        self._get_audio_handler = self._callbacks[0]
        self._get_command_handler = self._callbacks[1]
        self._get_context_menu_handler = self._callbacks[2]
        self._get_dialog_handler = self._callbacks[3]
        self._get_display_handler = self._callbacks[4]
        self._get_download_handler = self._callbacks[5]
        self._get_drag_handler = self._callbacks[6]
        self._get_find_handler = self._callbacks[7]
        self._get_focus_handler = self._callbacks[8]
        self._get_frame_handler = self._callbacks[9]
        self._get_jsdialog_handler = self._callbacks[10]
        self._get_keyboard_handler = self._callbacks[11]
        self._get_life_span_handler = self._callbacks[12]
        self._get_load_handler = self._callbacks[13]
        self._get_print_handler = self._callbacks[14]
        self._get_render_handler = self._callbacks[15]
        self._get_request_handler = self._callbacks[16]
        self._on_process_message_received = self._callbacks[17]


class cef_command_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_command_handler_t), POINTER(cef_browser_t), c_int, CefWindowOpenDisposition)(self.OnChromeCommand),
        ]
        self._on_chrome_command = self._callbacks[0]


class cef_command_line_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_run_context_menu_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_context_menu_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t))(self.OnBeforeContextMenu),
            CEFCALLBACK(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t), POINTER(cef_run_context_menu_callback_t))(self.RunContextMenu),
            CEFCALLBACK(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), c_int, CefEventFlags)(self.OnContextMenuCommand),
            CEFCALLBACK(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))(self.OnContextMenuDismissed),
        ]
        self._on_before_context_menu = self._callbacks[0]
        self._run_context_menu = self._callbacks[1]
        self._on_context_menu_command = self._callbacks[2]
        self._on_context_menu_dismissed = self._callbacks[3]


class cef_context_menu_params_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_cookie_manager_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_cookie_visitor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_cookie_visitor_t), POINTER(cef_cookie_t), c_int, c_int, POINTER(c_int))(self.Visit),
        ]
        self._visit = self._callbacks[0]


class cef_set_cookie_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_set_cookie_callback_t), c_int)(self.OnComplete),
        ]
        self._on_complete = self._callbacks[0]


class cef_delete_cookies_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_delete_cookies_callback_t), c_int)(self.OnComplete),
        ]
        self._on_complete = self._callbacks[0]


class cef_dev_tools_message_observer_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), c_void_p, c_size_t)(self.OnDevToolsMessage),
            CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), c_int, c_int, c_void_p, c_size_t)(self.OnDevToolsMethodResult),
            CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_void_p, c_size_t)(self.OnDevToolsEvent),
            CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t))(self.OnDevToolsAgentAttached),
            CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t))(self.OnDevToolsAgentDetached),
        ]
        self._on_dev_tools_message = self._callbacks[0]
        self._on_dev_tools_method_result = self._callbacks[1]
        self._on_dev_tools_event = self._callbacks[2]
        self._on_dev_tools_agent_attached = self._callbacks[3]
        self._on_dev_tools_agent_detached = self._callbacks[4]


class cef_file_dialog_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_dialog_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_dialog_handler_t), POINTER(cef_browser_t), CefFileDialogMode, POINTER(cef_string_t), POINTER(cef_string_t), cef_string_list_t, POINTER(cef_file_dialog_callback_t))(self.OnFileDialog),
        ]
        self._on_file_dialog = self._callbacks[0]


class cef_display_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t))(self.OnAddressChange),
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))(self.OnTitleChange),
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), cef_string_list_t)(self.OnFaviconURLChange),
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_int)(self.OnFullscreenModeChange),
            CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))(self.OnTooltip),
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))(self.OnStatusMessage),
            CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), CefLogSeverity, POINTER(cef_string_t), POINTER(cef_string_t), c_int)(self.OnConsoleMessage),
            CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_size_t))(self.OnAutoResize),
            CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_double)(self.OnLoadingProgressChange),
            CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_void_p, CefCursorType, POINTER(cef_cursor_info_t))(self.OnCursorChange),
        ]
        self._on_address_change = self._callbacks[0]
        self._on_title_change = self._callbacks[1]
        self._on_favicon_urlchange = self._callbacks[2]
        self._on_fullscreen_mode_change = self._callbacks[3]
        self._on_tooltip = self._callbacks[4]
        self._on_status_message = self._callbacks[5]
        self._on_console_message = self._callbacks[6]
        self._on_auto_resize = self._callbacks[7]
        self._on_loading_progress_change = self._callbacks[8]
        self._on_cursor_change = self._callbacks[9]


class cef_domvisitor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_domvisitor_t), POINTER(cef_domdocument_t))(self.Visit),
        ]
        self._visit = self._callbacks[0]


class cef_domdocument_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_domnode_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_before_download_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_download_item_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_download_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t))(self.CanDownload),
            CEFCALLBACK(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_string_t), POINTER(cef_before_download_callback_t))(self.OnBeforeDownload),
            CEFCALLBACK(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_download_item_callback_t))(self.OnDownloadUpdated),
        ]
        self._can_download = self._callbacks[0]
        self._on_before_download = self._callbacks[1]
        self._on_download_updated = self._callbacks[2]


class cef_download_item_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_drag_data_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_drag_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), CefDragOperationsMask)(self.OnDragEnter),
            CEFCALLBACK(c_void, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_size_t, POINTER(cef_draggable_region_t))(self.OnDraggableRegionsChanged),
        ]
        self._on_drag_enter = self._callbacks[0]
        self._on_draggable_regions_changed = self._callbacks[1]


class cef_extension_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_get_extension_resource_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_extension_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), CefErrorCode)(self.OnExtensionLoadFailed),
            CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t))(self.OnExtensionLoaded),
            CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t))(self.OnExtensionUnloaded),
            CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_string_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t))(self.OnBeforeBackgroundBrowser),
            CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t))(self.OnBeforeBrowser),
            CEFCALLBACK(POINTER(cef_browser_t), POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int)(self.GetActiveBrowser),
            CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int, POINTER(cef_browser_t))(self.CanAccessBrowser),
            CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_get_extension_resource_callback_t))(self.GetExtensionResource),
        ]
        self._on_extension_load_failed = self._callbacks[0]
        self._on_extension_loaded = self._callbacks[1]
        self._on_extension_unloaded = self._callbacks[2]
        self._on_before_background_browser = self._callbacks[3]
        self._on_before_browser = self._callbacks[4]
        self._get_active_browser = self._callbacks[5]
        self._can_access_browser = self._callbacks[6]
        self._get_extension_resource = self._callbacks[7]


class cef_find_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_find_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(cef_rect_t), c_int, c_int)(self.OnFindResult),
        ]
        self._on_find_result = self._callbacks[0]


class cef_focus_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), c_int)(self.OnTakeFocus),
            CEFCALLBACK(c_int, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), CefFocusSource)(self.OnSetFocus),
            CEFCALLBACK(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t))(self.OnGotFocus),
        ]
        self._on_take_focus = self._callbacks[0]
        self._on_set_focus = self._callbacks[1]
        self._on_got_focus = self._callbacks[2]


class cef_frame_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_frame_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))(self.OnFrameCreated),
            CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int)(self.OnFrameAttached),
            CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))(self.OnFrameDetached),
            CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_frame_t))(self.OnMainFrameChanged),
        ]
        self._on_frame_created = self._callbacks[0]
        self._on_frame_attached = self._callbacks[1]
        self._on_frame_detached = self._callbacks[2]
        self._on_main_frame_changed = self._callbacks[3]


class cef_image_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_jsdialog_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_jsdialog_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), CefJSDialogType, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_jsdialog_callback_t), POINTER(c_int))(self.OnJSDialog),
            CEFCALLBACK(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_jsdialog_callback_t))(self.OnBeforeUnloadDialog),
            CEFCALLBACK(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t))(self.OnResetDialogState),
            CEFCALLBACK(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t))(self.OnDialogClosed),
        ]
        self._on_jsdialog = self._callbacks[0]
        self._on_before_unload_dialog = self._callbacks[1]
        self._on_reset_dialog_state = self._callbacks[2]
        self._on_dialog_closed = self._callbacks[3]


class cef_keyboard_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), c_void_p, POINTER(c_int))(self.OnPreKeyEvent),
            CEFCALLBACK(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), c_void_p)(self.OnKeyEvent),
        ]
        self._on_pre_key_event = self._callbacks[0]
        self._on_key_event = self._callbacks[1]


class cef_life_span_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_string_t), CefWindowOpenDisposition, c_int, POINTER(cef_popup_features_t), POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t), POINTER(POINTER(cef_dictionary_value_t)), POINTER(c_int))(self.OnBeforePopup),
            CEFCALLBACK(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))(self.OnAfterCreated),
            CEFCALLBACK(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))(self.DoClose),
            CEFCALLBACK(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))(self.OnBeforeClose),
        ]
        self._on_before_popup = self._callbacks[0]
        self._on_after_created = self._callbacks[1]
        self._do_close = self._callbacks[2]
        self._on_before_close = self._callbacks[3]


class cef_load_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), c_int, c_int, c_int)(self.OnLoadingStateChange),
            CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefTransitionType)(self.OnLoadStart),
            CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int)(self.OnLoadEnd),
            CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefErrorCode, POINTER(cef_string_t), POINTER(cef_string_t))(self.OnLoadError),
        ]
        self._on_loading_state_change = self._callbacks[0]
        self._on_load_start = self._callbacks[1]
        self._on_load_end = self._callbacks[2]
        self._on_load_error = self._callbacks[3]


class cef_media_router_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_media_observer_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_media_observer_t), c_size_t, POINTER(POINTER(cef_media_sink_t)))(self.OnSinks),
            CEFCALLBACK(c_void, POINTER(cef_media_observer_t), c_size_t, POINTER(POINTER(cef_media_route_t)))(self.OnRoutes),
            CEFCALLBACK(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), CefMediaRouteConnectionState)(self.OnRouteStateChanged),
            CEFCALLBACK(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), c_void_p, c_size_t)(self.OnRouteMessageReceived),
        ]
        self._on_sinks = self._callbacks[0]
        self._on_routes = self._callbacks[1]
        self._on_route_state_changed = self._callbacks[2]
        self._on_route_message_received = self._callbacks[3]


class cef_media_route_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_media_route_create_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_media_route_create_callback_t), CefMediaRouteCreateResult, POINTER(cef_string_t), POINTER(cef_media_route_t))(self.OnMediaRouteCreateFinished),
        ]
        self._on_media_route_create_finished = self._callbacks[0]


class cef_media_sink_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_media_sink_device_info_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_media_sink_device_info_callback_t), POINTER(cef_media_sink_device_info_t))(self.OnMediaSinkDeviceInfo),
        ]
        self._on_media_sink_device_info = self._callbacks[0]


class cef_media_source_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_menu_model_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_menu_model_delegate_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int, CefEventFlags)(self.ExecuteCommand),
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_point_t))(self.MouseOutsideMenu),
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int)(self.UnhandledOpenSubmenu),
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int)(self.UnhandledCloseSubmenu),
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t))(self.MenuWillShow),
            CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t))(self.MenuClosed),
            CEFCALLBACK(c_int, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_string_t))(self.FormatLabel),
        ]
        self._execute_command = self._callbacks[0]
        self._mouse_outside_menu = self._callbacks[1]
        self._unhandled_open_submenu = self._callbacks[2]
        self._unhandled_close_submenu = self._callbacks[3]
        self._menu_will_show = self._callbacks[4]
        self._menu_closed = self._callbacks[5]
        self._format_label = self._callbacks[6]


class cef_navigation_entry_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_print_dialog_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_print_job_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_print_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t))(self.OnPrintStart),
            CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_print_settings_t), c_int)(self.OnPrintSettings),
            CEFCALLBACK(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_print_dialog_callback_t))(self.OnPrintDialog),
            CEFCALLBACK(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_print_job_callback_t))(self.OnPrintJob),
            CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t))(self.OnPrintReset),
            CEFCALLBACK(cef_size_t, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int)(self.GetPdfPaperSize),
        ]
        self._on_print_start = self._callbacks[0]
        self._on_print_settings = self._callbacks[1]
        self._on_print_dialog = self._callbacks[2]
        self._on_print_job = self._callbacks[3]
        self._on_print_reset = self._callbacks[4]
        self._get_pdf_paper_size = self._callbacks[5]


class cef_print_settings_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_process_message_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_registration_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_render_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(POINTER(cef_accessibility_handler_t), POINTER(cef_render_handler_t))(self.GetAccessibilityHandler),
            CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))(self.GetRootScreenRect),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))(self.GetViewRect),
            CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(c_int), POINTER(c_int))(self.GetScreenPoint),
            CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_screen_info_t))(self.GetScreenInfo),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int)(self.OnPopupShow),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))(self.OnPopupSize),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefPaintElementType, c_size_t, POINTER(cef_rect_t), c_void_p, c_int, c_int)(self.OnPaint),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefPaintElementType, c_size_t, POINTER(cef_rect_t), c_void_p)(self.OnAcceleratedPaint),
            CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), CefDragOperationsMask, c_int, c_int)(self.StartDragging),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefDragOperationsMask)(self.UpdateDragCursor),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_double, c_double)(self.OnScrollOffsetChanged),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_range_t), c_size_t, POINTER(cef_rect_t))(self.OnImeCompositionRangeChanged),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_range_t))(self.OnTextSelectionChanged),
            CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefTextInputMode)(self.OnVirtualKeyboardRequested),
        ]
        self._get_accessibility_handler = self._callbacks[0]
        self._get_root_screen_rect = self._callbacks[1]
        self._get_view_rect = self._callbacks[2]
        self._get_screen_point = self._callbacks[3]
        self._get_screen_info = self._callbacks[4]
        self._on_popup_show = self._callbacks[5]
        self._on_popup_size = self._callbacks[6]
        self._on_paint = self._callbacks[7]
        self._on_accelerated_paint = self._callbacks[8]
        self._start_dragging = self._callbacks[9]
        self._update_drag_cursor = self._callbacks[10]
        self._on_scroll_offset_changed = self._callbacks[11]
        self._on_ime_composition_range_changed = self._callbacks[12]
        self._on_text_selection_changed = self._callbacks[13]
        self._on_virtual_keyboard_requested = self._callbacks[14]


class cef_render_process_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t))(self.OnWebKitInitialized),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_dictionary_value_t))(self.OnBrowserCreated),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t))(self.OnBrowserDestroyed),
            CEFCALLBACK(POINTER(cef_load_handler_t), POINTER(cef_render_process_handler_t))(self.GetLoadHandler),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t))(self.OnContextCreated),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t))(self.OnContextReleased),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t), POINTER(cef_v8exception_t), POINTER(cef_v8stack_trace_t))(self.OnUncaughtException),
            CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_domnode_t))(self.OnFocusedNodeChanged),
            CEFCALLBACK(c_int, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefProcessId, POINTER(cef_process_message_t))(self.OnProcessMessageReceived),
        ]
        self._on_web_kit_initialized = self._callbacks[0]
        self._on_browser_created = self._callbacks[1]
        self._on_browser_destroyed = self._callbacks[2]
        self._get_load_handler = self._callbacks[3]
        self._on_context_created = self._callbacks[4]
        self._on_context_released = self._callbacks[5]
        self._on_uncaught_exception = self._callbacks[6]
        self._on_focused_node_changed = self._callbacks[7]
        self._on_process_message_received = self._callbacks[8]


class cef_request_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_post_data_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_post_data_element_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_resolve_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_resolve_callback_t), CefErrorCode, cef_string_list_t)(self.OnResolveCompleted),
        ]
        self._on_resolve_completed = self._callbacks[0]


class cef_request_context_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_request_context_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_request_context_handler_t), POINTER(cef_request_context_t))(self.OnRequestContextInitialized),
            CEFCALLBACK(POINTER(cef_resource_request_handler_t), POINTER(cef_request_context_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int))(self.GetResourceRequestHandler),
        ]
        self._on_request_context_initialized = self._callbacks[0]
        self._get_resource_request_handler = self._callbacks[1]


class cef_select_client_certificate_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_request_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int)(self.OnBeforeBrowse),
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), CefWindowOpenDisposition, c_int)(self.OnOpenURLFromTab),
            CEFCALLBACK(POINTER(cef_resource_request_handler_t), POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int))(self.GetResourceRequestHandler),
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t))(self.GetAuthCredentials),
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_long, POINTER(cef_callback_t))(self.OnQuotaRequest),
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), CefErrorCode, POINTER(cef_string_t), POINTER(cef_sslinfo_t), POINTER(cef_callback_t))(self.OnCertificateError),
            CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, c_size_t, POINTER(POINTER(cef_x509certificate_t)), POINTER(cef_select_client_certificate_callback_t))(self.OnSelectClientCertificate),
            CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t))(self.OnRenderViewReady),
            CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t), CefTerminationStatus)(self.OnRenderProcessTerminated),
            CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t))(self.OnDocumentAvailableInMainFrame),
        ]
        self._on_before_browse = self._callbacks[0]
        self._on_open_urlfrom_tab = self._callbacks[1]
        self._get_resource_request_handler = self._callbacks[2]
        self._get_auth_credentials = self._callbacks[3]
        self._on_quota_request = self._callbacks[4]
        self._on_certificate_error = self._callbacks[5]
        self._on_select_client_certificate = self._callbacks[6]
        self._on_render_view_ready = self._callbacks[7]
        self._on_render_process_terminated = self._callbacks[8]
        self._on_document_available_in_main_frame = self._callbacks[9]


class cef_resource_bundle_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_resource_bundle_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(cef_string_t))(self.GetLocalizedString),
            CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(c_void_p), POINTER(c_size_t))(self.GetDataResource),
            CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, CefScaleFactor, POINTER(c_void_p), POINTER(c_size_t))(self.GetDataResourceForScale),
        ]
        self._get_localized_string = self._callbacks[0]
        self._get_data_resource = self._callbacks[1]
        self._get_data_resource_for_scale = self._callbacks[2]


class cef_resource_skip_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_resource_read_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_resource_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(c_int), POINTER(cef_callback_t))(self.Open),
            CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(cef_callback_t))(self.ProcessRequest),
            CEFCALLBACK(c_void, POINTER(cef_resource_handler_t), POINTER(cef_response_t), POINTER(c_long), POINTER(cef_string_t))(self.GetResponseHeaders),
            CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_long, POINTER(c_long), POINTER(cef_resource_skip_callback_t))(self.Skip),
            CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_void_p, c_int, POINTER(c_int), POINTER(cef_resource_read_callback_t))(self.Read),
            CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_void_p, c_int, POINTER(c_int), POINTER(cef_callback_t))(self.ReadResponse),
            CEFCALLBACK(c_void, POINTER(cef_resource_handler_t))(self.Cancel),
        ]
        self._open = self._callbacks[0]
        self._process_request = self._callbacks[1]
        self._get_response_headers = self._callbacks[2]
        self._skip = self._callbacks[3]
        self._read = self._callbacks[4]
        self._read_response = self._callbacks[5]
        self._cancel = self._callbacks[6]


class cef_resource_request_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(POINTER(cef_cookie_access_filter_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t))(self.GetCookieAccessFilter),
            CEFCALLBACK(CefReturnValue, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_callback_t))(self.OnBeforeResourceLoad),
            CEFCALLBACK(POINTER(cef_resource_handler_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t))(self.GetResourceHandler),
            CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_string_t))(self.OnResourceRedirect),
            CEFCALLBACK(c_int, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t))(self.OnResourceResponse),
            CEFCALLBACK(POINTER(cef_response_filter_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t))(self.GetResourceResponseFilter),
            CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), CefUrlRequestStatus, c_long)(self.OnResourceLoadComplete),
            CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(c_int))(self.OnProtocolExecution),
        ]
        self._get_cookie_access_filter = self._callbacks[0]
        self._on_before_resource_load = self._callbacks[1]
        self._get_resource_handler = self._callbacks[2]
        self._on_resource_redirect = self._callbacks[3]
        self._on_resource_response = self._callbacks[4]
        self._get_resource_response_filter = self._callbacks[5]
        self._on_resource_load_complete = self._callbacks[6]
        self._on_protocol_execution = self._callbacks[7]


class cef_cookie_access_filter_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_cookie_t))(self.CanSendCookie),
            CEFCALLBACK(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_cookie_t))(self.CanSaveCookie),
        ]
        self._can_send_cookie = self._callbacks[0]
        self._can_save_cookie = self._callbacks[1]


class cef_response_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_response_filter_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_response_filter_t))(self.InitFilter),
            CEFCALLBACK(CefResponseFilterStatus, POINTER(cef_response_filter_t), c_void_p, c_size_t, POINTER(c_size_t), c_void_p, c_size_t, POINTER(c_size_t))(self.Filter),
        ]
        self._init_filter = self._callbacks[0]
        self._filter = self._callbacks[1]


class cef_scheme_registrar_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_scheme_handler_factory_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(POINTER(cef_resource_handler_t), POINTER(cef_scheme_handler_factory_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_request_t))(self.Create),
        ]
        self._create = self._callbacks[0]


class cef_server_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_server_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t))(self.OnServerCreated),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t))(self.OnServerDestroyed),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)(self.OnClientConnected),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)(self.OnClientDisconnected),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t))(self.OnHttpRequest),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t), POINTER(cef_callback_t))(self.OnWebSocketRequest),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)(self.OnWebSocketConnected),
            CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, c_void_p, c_size_t)(self.OnWebSocketMessage),
        ]
        self._on_server_created = self._callbacks[0]
        self._on_server_destroyed = self._callbacks[1]
        self._on_client_connected = self._callbacks[2]
        self._on_client_disconnected = self._callbacks[3]
        self._on_http_request = self._callbacks[4]
        self._on_web_socket_request = self._callbacks[5]
        self._on_web_socket_connected = self._callbacks[6]
        self._on_web_socket_message = self._callbacks[7]


class cef_sslinfo_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_sslstatus_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_read_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_size_t, POINTER(cef_read_handler_t), c_void_p, c_size_t, c_size_t)(self.Read),
            CEFCALLBACK(c_int, POINTER(cef_read_handler_t), c_long, c_int)(self.Seek),
            CEFCALLBACK(c_long, POINTER(cef_read_handler_t))(self.Tell),
            CEFCALLBACK(c_int, POINTER(cef_read_handler_t))(self.Eof),
            CEFCALLBACK(c_int, POINTER(cef_read_handler_t))(self.MayBlock),
        ]
        self._read = self._callbacks[0]
        self._seek = self._callbacks[1]
        self._tell = self._callbacks[2]
        self._eof = self._callbacks[3]
        self._may_block = self._callbacks[4]


class cef_stream_reader_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_write_handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_size_t, POINTER(cef_write_handler_t), c_void_p, c_size_t, c_size_t)(self.Write),
            CEFCALLBACK(c_int, POINTER(cef_write_handler_t), c_long, c_int)(self.Seek),
            CEFCALLBACK(c_long, POINTER(cef_write_handler_t))(self.Tell),
            CEFCALLBACK(c_int, POINTER(cef_write_handler_t))(self.Flush),
            CEFCALLBACK(c_int, POINTER(cef_write_handler_t))(self.MayBlock),
        ]
        self._write = self._callbacks[0]
        self._seek = self._callbacks[1]
        self._tell = self._callbacks[2]
        self._flush = self._callbacks[3]
        self._may_block = self._callbacks[4]


class cef_stream_writer_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_string_visitor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_string_visitor_t), POINTER(cef_string_t))(self.Visit),
        ]
        self._visit = self._callbacks[0]


class cef_task_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_task_t))(self.Execute),
        ]
        self._execute = self._callbacks[0]


class cef_task_runner_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_end_tracing_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_end_tracing_callback_t), POINTER(cef_string_t))(self.OnEndTracingComplete),
        ]
        self._on_end_tracing_complete = self._callbacks[0]


class cef_urlrequest_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_urlrequest_client_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t))(self.OnRequestComplete),
            CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_long, c_long)(self.OnUploadProgress),
            CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_long, c_long)(self.OnDownloadProgress),
            CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_void_p, c_size_t)(self.OnDownloadData),
            CEFCALLBACK(c_int, POINTER(cef_urlrequest_client_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t))(self.GetAuthCredentials),
        ]
        self._on_request_complete = self._callbacks[0]
        self._on_upload_progress = self._callbacks[1]
        self._on_download_progress = self._callbacks[2]
        self._on_download_data = self._callbacks[3]
        self._get_auth_credentials = self._callbacks[4]


class cef_v8context_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_v8handler_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_v8handler_t), POINTER(cef_string_t), POINTER(cef_v8value_t), c_size_t, POINTER(POINTER(cef_v8value_t)), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))(self.Execute),
        ]
        self._execute = self._callbacks[0]


class cef_v8accessor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))(self.Get),
            CEFCALLBACK(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))(self.Set),
        ]
        self._get = self._callbacks[0]
        self._set = self._callbacks[1]


class cef_v8interceptor_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))(self.Get),
            CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))(self.Get),
            CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))(self.Set),
            CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))(self.Set),
        ]
        self._get_byname = self._callbacks[0]
        self._get_byindex = self._callbacks[1]
        self._set_byname = self._callbacks[2]
        self._set_byindex = self._callbacks[3]


class cef_v8exception_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_v8array_buffer_release_callback_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)
        self._callbacks = [
            CEFCALLBACK(c_void, POINTER(cef_v8array_buffer_release_callback_t), c_void_p)(self.ReleaseBuffer),
        ]
        self._release_buffer = self._callbacks[0]


class cef_v8value_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_v8stack_trace_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_v8stack_frame_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_value_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_binary_value_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_dictionary_value_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_list_value_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_x509cert_principal_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_x509certificate_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_xml_reader_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

class cef_zip_reader_t(Structure):
    _align_ = CEFALIGN

    def __init__(self):
        super().__init__()
        self._base.c_init()
        self._base.size = sizeof(self)

cef_accessibility_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_accessibility_tree_change', CEFCALLBACK(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t))),
    ('_on_accessibility_location_change', CEFCALLBACK(c_void, POINTER(cef_accessibility_handler_t), POINTER(cef_value_t))),
)
cef_app_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_before_command_line_processing', CEFCALLBACK(c_void, POINTER(cef_app_t), POINTER(cef_string_t), POINTER(cef_command_line_t))),
    ('_on_register_custom_schemes', CEFCALLBACK(c_void, POINTER(cef_app_t), POINTER(cef_scheme_registrar_t))),
    ('_get_resource_bundle_handler', CEFCALLBACK(POINTER(cef_resource_bundle_handler_t), POINTER(cef_app_t))),
    ('_get_browser_process_handler', CEFCALLBACK(POINTER(cef_browser_process_handler_t), POINTER(cef_app_t))),
    ('_get_render_process_handler', CEFCALLBACK(POINTER(cef_render_process_handler_t), POINTER(cef_app_t))),
)
cef_audio_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_audio_parameters', CEFCALLBACK(c_int, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t))),
    ('_on_audio_stream_started', CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_audio_parameters_t), c_int)),
    ('_on_audio_stream_packet', CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(POINTER(c_float)), c_int, c_long)),
    ('_on_audio_stream_stopped', CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t))),
    ('_on_audio_stream_error', CEFCALLBACK(c_void, POINTER(cef_audio_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))),
)
cef_auth_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_auth_callback_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_auth_callback_t))),
)
cef_browser_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_get_host', CEFCALLBACK(POINTER(cef_browser_host_t), POINTER(cef_browser_t))),
    ('_can_go_back', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_go_back', CEFCALLBACK(c_void, POINTER(cef_browser_t))),
    ('_can_go_forward', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_go_forward', CEFCALLBACK(c_void, POINTER(cef_browser_t))),
    ('_is_loading', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_reload', CEFCALLBACK(c_void, POINTER(cef_browser_t))),
    ('_reload_ignore_cache', CEFCALLBACK(c_void, POINTER(cef_browser_t))),
    ('_stop_load', CEFCALLBACK(c_void, POINTER(cef_browser_t))),
    ('_get_identifier', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_browser_t), POINTER(cef_browser_t))),
    ('_is_popup', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_has_document', CEFCALLBACK(c_int, POINTER(cef_browser_t))),
    ('_get_main_frame', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_browser_t))),
    ('_get_focused_frame', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_browser_t))),
    ('_get_frame_byident', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_browser_t), c_long)),
    ('_get_frame', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_browser_t), POINTER(cef_string_t))),
    ('_get_frame_count', CEFCALLBACK(c_size_t, POINTER(cef_browser_t))),
    ('_get_frame_identifiers', CEFCALLBACK(c_void, POINTER(cef_browser_t), POINTER(c_size_t), POINTER(c_long))),
    ('_get_frame_names', CEFCALLBACK(c_void, POINTER(cef_browser_t), cef_string_list_t)),
)
cef_run_file_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_file_dialog_dismissed', CEFCALLBACK(c_void, POINTER(cef_run_file_dialog_callback_t), cef_string_list_t)),
)
cef_navigation_entry_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_visit', CEFCALLBACK(c_int, POINTER(cef_navigation_entry_visitor_t), POINTER(cef_navigation_entry_t), c_int, c_int, c_int)),
)
cef_pdf_print_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_pdf_print_finished', CEFCALLBACK(c_void, POINTER(cef_pdf_print_callback_t), POINTER(cef_string_t), c_int)),
)
cef_download_image_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_download_image_finished', CEFCALLBACK(c_void, POINTER(cef_download_image_callback_t), POINTER(cef_string_t), c_int, POINTER(cef_image_t))),
)
cef_browser_host_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_browser', CEFCALLBACK(POINTER(cef_browser_t), POINTER(cef_browser_host_t))),
    ('_close_browser', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_try_close_browser', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_set_focus', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_get_window_handle', CEFCALLBACK(c_void_p, POINTER(cef_browser_host_t))),
    ('_get_opener_window_handle', CEFCALLBACK(c_void_p, POINTER(cef_browser_host_t))),
    ('_has_view', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_get_client', CEFCALLBACK(POINTER(cef_client_t), POINTER(cef_browser_host_t))),
    ('_get_request_context', CEFCALLBACK(POINTER(cef_request_context_t), POINTER(cef_browser_host_t))),
    ('_get_zoom_level', CEFCALLBACK(c_double, POINTER(cef_browser_host_t))),
    ('_set_zoom_level', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_double)),
    ('_run_file_dialog', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), CefFileDialogMode, POINTER(cef_string_t), POINTER(cef_string_t), cef_string_list_t, POINTER(cef_run_file_dialog_callback_t))),
    ('_start_download', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t))),
    ('_download_image', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), c_int, c_uint, c_int, POINTER(cef_download_image_callback_t))),
    ('_print', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_print_to_pdf', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), POINTER(cef_pdf_print_settings_t), POINTER(cef_pdf_print_callback_t))),
    ('_find', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), c_int, c_int, c_int)),
    ('_stop_finding', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_show_dev_tools', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_window_info_t), POINTER(cef_client_t), POINTER(cef_browser_settings_t), POINTER(cef_point_t))),
    ('_close_dev_tools', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_has_dev_tools', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_send_dev_tools_message', CEFCALLBACK(c_int, POINTER(cef_browser_host_t), c_void_p, c_size_t)),
    ('_execute_dev_tools_method', CEFCALLBACK(c_int, POINTER(cef_browser_host_t), c_int, POINTER(cef_string_t), POINTER(cef_dictionary_value_t))),
    ('_add_dev_tools_message_observer', CEFCALLBACK(POINTER(cef_registration_t), POINTER(cef_browser_host_t), POINTER(cef_dev_tools_message_observer_t))),
    ('_get_navigation_entries', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_navigation_entry_visitor_t), c_int)),
    ('_replace_misspelling', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t))),
    ('_add_word_to_dictionary', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t))),
    ('_is_window_rendering_disabled', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_was_resized', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_was_hidden', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_notify_screen_info_changed', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_invalidate', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), CefPaintElementType)),
    ('_send_external_begin_frame', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_send_key_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_key_event_t))),
    ('_send_mouse_click_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), CefMouseButtonType, c_int, c_int)),
    ('_send_mouse_move_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), c_int)),
    ('_send_mouse_wheel_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), c_int, c_int)),
    ('_send_touch_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_touch_event_t))),
    ('_send_capture_lost_event', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_notify_move_or_resize_started', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_get_windowless_frame_rate', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_set_windowless_frame_rate', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_ime_set_composition', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), c_size_t, POINTER(cef_composition_underline_t), POINTER(cef_range_t), POINTER(cef_range_t))),
    ('_ime_commit_text', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_string_t), POINTER(cef_range_t), c_int)),
    ('_ime_finish_composing_text', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_ime_cancel_composition', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_drag_target_drag_enter', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_drag_data_t), POINTER(cef_mouse_event_t), CefDragOperationsMask)),
    ('_drag_target_drag_over', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t), CefDragOperationsMask)),
    ('_drag_target_drag_leave', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_drag_target_drop', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), POINTER(cef_mouse_event_t))),
    ('_drag_source_ended_at', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int, c_int, CefDragOperationsMask)),
    ('_drag_source_system_drag_ended', CEFCALLBACK(c_void, POINTER(cef_browser_host_t))),
    ('_get_visible_navigation_entry', CEFCALLBACK(POINTER(cef_navigation_entry_t), POINTER(cef_browser_host_t))),
    ('_set_accessibility_state', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), CefState)),
    ('_set_auto_resize_enabled', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int, POINTER(cef_size_t), POINTER(cef_size_t))),
    ('_get_extension', CEFCALLBACK(POINTER(cef_extension_t), POINTER(cef_browser_host_t))),
    ('_is_background_host', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
    ('_set_audio_muted', CEFCALLBACK(c_void, POINTER(cef_browser_host_t), c_int)),
    ('_is_audio_muted', CEFCALLBACK(c_int, POINTER(cef_browser_host_t))),
)
cef_browser_process_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_context_initialized', CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t))),
    ('_on_before_child_process_launch', CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t), POINTER(cef_command_line_t))),
    ('_on_schedule_message_pump_work', CEFCALLBACK(c_void, POINTER(cef_browser_process_handler_t), c_long)),
    ('_get_default_client', CEFCALLBACK(POINTER(cef_client_t), POINTER(cef_browser_process_handler_t))),
)
cef_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_callback_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_callback_t))),
)
cef_completion_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_complete', CEFCALLBACK(c_void, POINTER(cef_completion_callback_t))),
)
cef_client_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_audio_handler', CEFCALLBACK(POINTER(cef_audio_handler_t), POINTER(cef_client_t))),
    ('_get_command_handler', CEFCALLBACK(POINTER(cef_command_handler_t), POINTER(cef_client_t))),
    ('_get_context_menu_handler', CEFCALLBACK(POINTER(cef_context_menu_handler_t), POINTER(cef_client_t))),
    ('_get_dialog_handler', CEFCALLBACK(POINTER(cef_dialog_handler_t), POINTER(cef_client_t))),
    ('_get_display_handler', CEFCALLBACK(POINTER(cef_display_handler_t), POINTER(cef_client_t))),
    ('_get_download_handler', CEFCALLBACK(POINTER(cef_download_handler_t), POINTER(cef_client_t))),
    ('_get_drag_handler', CEFCALLBACK(POINTER(cef_drag_handler_t), POINTER(cef_client_t))),
    ('_get_find_handler', CEFCALLBACK(POINTER(cef_find_handler_t), POINTER(cef_client_t))),
    ('_get_focus_handler', CEFCALLBACK(POINTER(cef_focus_handler_t), POINTER(cef_client_t))),
    ('_get_frame_handler', CEFCALLBACK(POINTER(cef_frame_handler_t), POINTER(cef_client_t))),
    ('_get_jsdialog_handler', CEFCALLBACK(POINTER(cef_jsdialog_handler_t), POINTER(cef_client_t))),
    ('_get_keyboard_handler', CEFCALLBACK(POINTER(cef_keyboard_handler_t), POINTER(cef_client_t))),
    ('_get_life_span_handler', CEFCALLBACK(POINTER(cef_life_span_handler_t), POINTER(cef_client_t))),
    ('_get_load_handler', CEFCALLBACK(POINTER(cef_load_handler_t), POINTER(cef_client_t))),
    ('_get_print_handler', CEFCALLBACK(POINTER(cef_print_handler_t), POINTER(cef_client_t))),
    ('_get_render_handler', CEFCALLBACK(POINTER(cef_render_handler_t), POINTER(cef_client_t))),
    ('_get_request_handler', CEFCALLBACK(POINTER(cef_request_handler_t), POINTER(cef_client_t))),
    ('_on_process_message_received', CEFCALLBACK(c_int, POINTER(cef_client_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefProcessId, POINTER(cef_process_message_t))),
)
cef_command_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_chrome_command', CEFCALLBACK(c_int, POINTER(cef_command_handler_t), POINTER(cef_browser_t), c_int, CefWindowOpenDisposition)),
)
cef_command_line_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_command_line_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_command_line_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_command_line_t), POINTER(cef_command_line_t))),
    ('_init_from_argv', CEFCALLBACK(c_void, POINTER(cef_command_line_t), c_int, POINTER(POINTER(c_byte)))),
    ('_init_from_string', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_reset', CEFCALLBACK(c_void, POINTER(cef_command_line_t))),
    ('_get_argv', CEFCALLBACK(c_void, POINTER(cef_command_line_t), cef_string_list_t)),
    ('_get_command_line_string', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_command_line_t))),
    ('_get_program', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_command_line_t))),
    ('_set_program', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_has_switches', CEFCALLBACK(c_int, POINTER(cef_command_line_t))),
    ('_has_switch', CEFCALLBACK(c_int, POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_get_switch_value', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_get_switches', CEFCALLBACK(c_void, POINTER(cef_command_line_t), cef_string_map_t)),
    ('_append_switch', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_append_switch_with_value', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_has_arguments', CEFCALLBACK(c_int, POINTER(cef_command_line_t))),
    ('_get_arguments', CEFCALLBACK(c_void, POINTER(cef_command_line_t), cef_string_list_t)),
    ('_append_argument', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t))),
    ('_prepend_wrapper', CEFCALLBACK(c_void, POINTER(cef_command_line_t), POINTER(cef_string_t))),
)
cef_run_context_menu_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_run_context_menu_callback_t), c_int, CefEventFlags)),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_run_context_menu_callback_t))),
)
cef_context_menu_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_before_context_menu', CEFCALLBACK(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t))),
    ('_run_context_menu', CEFCALLBACK(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), POINTER(cef_menu_model_t), POINTER(cef_run_context_menu_callback_t))),
    ('_on_context_menu_command', CEFCALLBACK(c_int, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_context_menu_params_t), c_int, CefEventFlags)),
    ('_on_context_menu_dismissed', CEFCALLBACK(c_void, POINTER(cef_context_menu_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))),
)
cef_context_menu_params_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_xcoord', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
    ('_get_ycoord', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
    ('_get_type_flags', CEFCALLBACK(CefContextMenuTypeFlags, POINTER(cef_context_menu_params_t))),
    ('_get_link_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_unfiltered_link_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_source_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_has_image_contents', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
    ('_get_title_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_page_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_frame_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_frame_charset', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_media_type', CEFCALLBACK(CefContextMenuMediaType, POINTER(cef_context_menu_params_t))),
    ('_get_media_state_flags', CEFCALLBACK(CefContextMenuMediaStateFlags, POINTER(cef_context_menu_params_t))),
    ('_get_selection_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_misspelled_word', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_context_menu_params_t))),
    ('_get_dictionary_suggestions', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t), cef_string_list_t)),
    ('_is_editable', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
    ('_is_spell_check_enabled', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
    ('_get_edit_state_flags', CEFCALLBACK(CefContextMenuEditStateFlags, POINTER(cef_context_menu_params_t))),
    ('_is_custom_menu', CEFCALLBACK(c_int, POINTER(cef_context_menu_params_t))),
)
cef_cookie_manager_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_visit_all_cookies', CEFCALLBACK(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_cookie_visitor_t))),
    ('_visit_url_cookies', CEFCALLBACK(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), c_int, POINTER(cef_cookie_visitor_t))),
    ('_set_cookie', CEFCALLBACK(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), POINTER(cef_cookie_t), POINTER(cef_set_cookie_callback_t))),
    ('_delete_cookies', CEFCALLBACK(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_delete_cookies_callback_t))),
    ('_flush_store', CEFCALLBACK(c_int, POINTER(cef_cookie_manager_t), POINTER(cef_completion_callback_t))),
)
cef_cookie_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_visit', CEFCALLBACK(c_int, POINTER(cef_cookie_visitor_t), POINTER(cef_cookie_t), c_int, c_int, POINTER(c_int))),
)
cef_set_cookie_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_complete', CEFCALLBACK(c_void, POINTER(cef_set_cookie_callback_t), c_int)),
)
cef_delete_cookies_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_complete', CEFCALLBACK(c_void, POINTER(cef_delete_cookies_callback_t), c_int)),
)
cef_dev_tools_message_observer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_dev_tools_message', CEFCALLBACK(c_int, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), c_void_p, c_size_t)),
    ('_on_dev_tools_method_result', CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), c_int, c_int, c_void_p, c_size_t)),
    ('_on_dev_tools_event', CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_void_p, c_size_t)),
    ('_on_dev_tools_agent_attached', CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t))),
    ('_on_dev_tools_agent_detached', CEFCALLBACK(c_void, POINTER(cef_dev_tools_message_observer_t), POINTER(cef_browser_t))),
)
cef_file_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_file_dialog_callback_t), cef_string_list_t)),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_file_dialog_callback_t))),
)
cef_dialog_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_file_dialog', CEFCALLBACK(c_int, POINTER(cef_dialog_handler_t), POINTER(cef_browser_t), CefFileDialogMode, POINTER(cef_string_t), POINTER(cef_string_t), cef_string_list_t, POINTER(cef_file_dialog_callback_t))),
)
cef_display_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_address_change', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t))),
    ('_on_title_change', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))),
    ('_on_favicon_urlchange', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), cef_string_list_t)),
    ('_on_fullscreen_mode_change', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_int)),
    ('_on_tooltip', CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))),
    ('_on_status_message', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t))),
    ('_on_console_message', CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), CefLogSeverity, POINTER(cef_string_t), POINTER(cef_string_t), c_int)),
    ('_on_auto_resize', CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), POINTER(cef_size_t))),
    ('_on_loading_progress_change', CEFCALLBACK(c_void, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_double)),
    ('_on_cursor_change', CEFCALLBACK(c_int, POINTER(cef_display_handler_t), POINTER(cef_browser_t), c_void_p, CefCursorType, POINTER(cef_cursor_info_t))),
)
cef_domvisitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_visit', CEFCALLBACK(c_void, POINTER(cef_domvisitor_t), POINTER(cef_domdocument_t))),
)
cef_domdocument_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_type', CEFCALLBACK(CefDomDocumentType, POINTER(cef_domdocument_t))),
    ('_get_document', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domdocument_t))),
    ('_get_body', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domdocument_t))),
    ('_get_head', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domdocument_t))),
    ('_get_title', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domdocument_t))),
    ('_get_element_by_id', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domdocument_t), POINTER(cef_string_t))),
    ('_get_focused_node', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domdocument_t))),
    ('_has_selection', CEFCALLBACK(c_int, POINTER(cef_domdocument_t))),
    ('_get_selection_start_offset', CEFCALLBACK(c_int, POINTER(cef_domdocument_t))),
    ('_get_selection_end_offset', CEFCALLBACK(c_int, POINTER(cef_domdocument_t))),
    ('_get_selection_as_markup', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domdocument_t))),
    ('_get_selection_as_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domdocument_t))),
    ('_get_base_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domdocument_t))),
    ('_get_complete_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domdocument_t), POINTER(cef_string_t))),
)
cef_domnode_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_type', CEFCALLBACK(CefDomNodeType, POINTER(cef_domnode_t))),
    ('_is_text', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_is_element', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_is_editable', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_is_form_control_element', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_get_form_control_element_type', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_get_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_get_value', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_set_value', CEFCALLBACK(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t))),
    ('_get_as_markup', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_get_document', CEFCALLBACK(POINTER(cef_domdocument_t), POINTER(cef_domnode_t))),
    ('_get_parent', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_get_previous_sibling', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_get_next_sibling', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_has_children', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_get_first_child', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_get_last_child', CEFCALLBACK(POINTER(cef_domnode_t), POINTER(cef_domnode_t))),
    ('_get_element_tag_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_has_element_attributes', CEFCALLBACK(c_int, POINTER(cef_domnode_t))),
    ('_has_element_attribute', CEFCALLBACK(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t))),
    ('_get_element_attribute', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t), POINTER(cef_string_t))),
    ('_get_element_attributes', CEFCALLBACK(c_void, POINTER(cef_domnode_t), cef_string_map_t)),
    ('_set_element_attribute', CEFCALLBACK(c_int, POINTER(cef_domnode_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_get_element_inner_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_domnode_t))),
    ('_get_element_bounds', CEFCALLBACK(cef_rect_t, POINTER(cef_domnode_t))),
)
cef_before_download_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_before_download_callback_t), POINTER(cef_string_t), c_int)),
)
cef_download_item_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_download_item_callback_t))),
    ('_pause', CEFCALLBACK(c_void, POINTER(cef_download_item_callback_t))),
    ('_resume', CEFCALLBACK(c_void, POINTER(cef_download_item_callback_t))),
)
cef_download_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_can_download', CEFCALLBACK(c_int, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_on_before_download', CEFCALLBACK(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_string_t), POINTER(cef_before_download_callback_t))),
    ('_on_download_updated', CEFCALLBACK(c_void, POINTER(cef_download_handler_t), POINTER(cef_browser_t), POINTER(cef_download_item_t), POINTER(cef_download_item_callback_t))),
)
cef_download_item_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_download_item_t))),
    ('_is_in_progress', CEFCALLBACK(c_int, POINTER(cef_download_item_t))),
    ('_is_complete', CEFCALLBACK(c_int, POINTER(cef_download_item_t))),
    ('_is_canceled', CEFCALLBACK(c_int, POINTER(cef_download_item_t))),
    ('_get_current_speed', CEFCALLBACK(c_long, POINTER(cef_download_item_t))),
    ('_get_percent_complete', CEFCALLBACK(c_int, POINTER(cef_download_item_t))),
    ('_get_total_bytes', CEFCALLBACK(c_long, POINTER(cef_download_item_t))),
    ('_get_received_bytes', CEFCALLBACK(c_long, POINTER(cef_download_item_t))),
    ('_get_start_time', CEFCALLBACK(cef_time_t, POINTER(cef_download_item_t))),
    ('_get_end_time', CEFCALLBACK(cef_time_t, POINTER(cef_download_item_t))),
    ('_get_full_path', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
    ('_get_id', CEFCALLBACK(c_uint, POINTER(cef_download_item_t))),
    ('_get_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
    ('_get_original_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
    ('_get_suggested_file_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
    ('_get_content_disposition', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
    ('_get_mime_type', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_download_item_t))),
)
cef_drag_data_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_clone', CEFCALLBACK(POINTER(cef_drag_data_t), POINTER(cef_drag_data_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_drag_data_t))),
    ('_is_link', CEFCALLBACK(c_int, POINTER(cef_drag_data_t))),
    ('_is_fragment', CEFCALLBACK(c_int, POINTER(cef_drag_data_t))),
    ('_is_file', CEFCALLBACK(c_int, POINTER(cef_drag_data_t))),
    ('_get_link_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_link_title', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_link_metadata', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_fragment_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_fragment_html', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_fragment_base_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_file_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_drag_data_t))),
    ('_get_file_contents', CEFCALLBACK(c_size_t, POINTER(cef_drag_data_t), POINTER(cef_stream_writer_t))),
    ('_get_file_names', CEFCALLBACK(c_int, POINTER(cef_drag_data_t), cef_string_list_t)),
    ('_set_link_url', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_set_link_title', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_set_link_metadata', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_set_fragment_text', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_set_fragment_html', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_set_fragment_base_url', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t))),
    ('_reset_file_contents', CEFCALLBACK(c_void, POINTER(cef_drag_data_t))),
    ('_add_file', CEFCALLBACK(c_void, POINTER(cef_drag_data_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_clear_filenames', CEFCALLBACK(c_void, POINTER(cef_drag_data_t))),
    ('_get_image', CEFCALLBACK(POINTER(cef_image_t), POINTER(cef_drag_data_t))),
    ('_get_image_hotspot', CEFCALLBACK(cef_point_t, POINTER(cef_drag_data_t))),
    ('_has_image', CEFCALLBACK(c_int, POINTER(cef_drag_data_t))),
)
cef_drag_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_drag_enter', CEFCALLBACK(c_int, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), CefDragOperationsMask)),
    ('_on_draggable_regions_changed', CEFCALLBACK(c_void, POINTER(cef_drag_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_size_t, POINTER(cef_draggable_region_t))),
)
cef_extension_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_identifier', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_extension_t))),
    ('_get_path', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_extension_t))),
    ('_get_manifest', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_extension_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_extension_t), POINTER(cef_extension_t))),
    ('_get_handler', CEFCALLBACK(POINTER(cef_extension_handler_t), POINTER(cef_extension_t))),
    ('_get_loader_context', CEFCALLBACK(POINTER(cef_request_context_t), POINTER(cef_extension_t))),
    ('_is_loaded', CEFCALLBACK(c_int, POINTER(cef_extension_t))),
    ('_unload', CEFCALLBACK(c_void, POINTER(cef_extension_t))),
)
cef_get_extension_resource_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_get_extension_resource_callback_t), POINTER(cef_stream_reader_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_get_extension_resource_callback_t))),
)
cef_extension_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_extension_load_failed', CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), CefErrorCode)),
    ('_on_extension_loaded', CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t))),
    ('_on_extension_unloaded', CEFCALLBACK(c_void, POINTER(cef_extension_handler_t), POINTER(cef_extension_t))),
    ('_on_before_background_browser', CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_string_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t))),
    ('_on_before_browser', CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t))),
    ('_get_active_browser', CEFCALLBACK(POINTER(cef_browser_t), POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int)),
    ('_can_access_browser', CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), c_int, POINTER(cef_browser_t))),
    ('_get_extension_resource', CEFCALLBACK(c_int, POINTER(cef_extension_handler_t), POINTER(cef_extension_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_get_extension_resource_callback_t))),
)
cef_find_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_find_result', CEFCALLBACK(c_void, POINTER(cef_find_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(cef_rect_t), c_int, c_int)),
)
cef_focus_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_take_focus', CEFCALLBACK(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), c_int)),
    ('_on_set_focus', CEFCALLBACK(c_int, POINTER(cef_focus_handler_t), POINTER(cef_browser_t), CefFocusSource)),
    ('_on_got_focus', CEFCALLBACK(c_void, POINTER(cef_focus_handler_t), POINTER(cef_browser_t))),
)
cef_frame_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_frame_t))),
    ('_undo', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_redo', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_cut', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_copy', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_paste', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_del', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_select_all', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_view_source', CEFCALLBACK(c_void, POINTER(cef_frame_t))),
    ('_get_source', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_string_visitor_t))),
    ('_get_text', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_string_visitor_t))),
    ('_load_request', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_request_t))),
    ('_load_url', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_string_t))),
    ('_execute_java_script', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int)),
    ('_is_main', CEFCALLBACK(c_int, POINTER(cef_frame_t))),
    ('_is_focused', CEFCALLBACK(c_int, POINTER(cef_frame_t))),
    ('_get_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_frame_t))),
    ('_get_identifier', CEFCALLBACK(c_long, POINTER(cef_frame_t))),
    ('_get_parent', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_frame_t))),
    ('_get_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_frame_t))),
    ('_get_browser', CEFCALLBACK(POINTER(cef_browser_t), POINTER(cef_frame_t))),
    ('_get_v8context', CEFCALLBACK(POINTER(cef_v8context_t), POINTER(cef_frame_t))),
    ('_visit_dom', CEFCALLBACK(c_void, POINTER(cef_frame_t), POINTER(cef_domvisitor_t))),
    ('_create_urlrequest', CEFCALLBACK(POINTER(cef_urlrequest_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_urlrequest_client_t))),
    ('_send_process_message', CEFCALLBACK(c_void, POINTER(cef_frame_t), CefProcessId, POINTER(cef_process_message_t))),
)
cef_frame_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_frame_created', CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))),
    ('_on_frame_attached', CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int)),
    ('_on_frame_detached', CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t))),
    ('_on_main_frame_changed', CEFCALLBACK(c_void, POINTER(cef_frame_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_frame_t))),
)
cef_image_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_empty', CEFCALLBACK(c_int, POINTER(cef_image_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_image_t), POINTER(cef_image_t))),
    ('_add_bitmap', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float, c_int, c_int, CefColorType, CefAlphaType, c_void_p, c_size_t)),
    ('_add_png', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float, c_void_p, c_size_t)),
    ('_add_jpeg', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float, c_void_p, c_size_t)),
    ('_get_width', CEFCALLBACK(c_size_t, POINTER(cef_image_t))),
    ('_get_height', CEFCALLBACK(c_size_t, POINTER(cef_image_t))),
    ('_has_representation', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float)),
    ('_remove_representation', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float)),
    ('_get_representation_info', CEFCALLBACK(c_int, POINTER(cef_image_t), c_float, POINTER(c_float), POINTER(c_int), POINTER(c_int))),
    ('_get_as_bitmap', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_image_t), c_float, CefColorType, CefAlphaType, POINTER(c_int), POINTER(c_int))),
    ('_get_as_png', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_image_t), c_float, c_int, POINTER(c_int), POINTER(c_int))),
    ('_get_as_jpeg', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_image_t), c_float, c_int, POINTER(c_int), POINTER(c_int))),
)
cef_jsdialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_jsdialog_callback_t), c_int, POINTER(cef_string_t))),
)
cef_jsdialog_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_jsdialog', CEFCALLBACK(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), CefJSDialogType, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_jsdialog_callback_t), POINTER(c_int))),
    ('_on_before_unload_dialog', CEFCALLBACK(c_int, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_jsdialog_callback_t))),
    ('_on_reset_dialog_state', CEFCALLBACK(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t))),
    ('_on_dialog_closed', CEFCALLBACK(c_void, POINTER(cef_jsdialog_handler_t), POINTER(cef_browser_t))),
)
cef_keyboard_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_pre_key_event', CEFCALLBACK(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), c_void_p, POINTER(c_int))),
    ('_on_key_event', CEFCALLBACK(c_int, POINTER(cef_keyboard_handler_t), POINTER(cef_browser_t), POINTER(cef_key_event_t), c_void_p)),
)
cef_life_span_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_before_popup', CEFCALLBACK(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_string_t), CefWindowOpenDisposition, c_int, POINTER(cef_popup_features_t), POINTER(cef_window_info_t), POINTER(POINTER(cef_client_t)), POINTER(cef_browser_settings_t), POINTER(POINTER(cef_dictionary_value_t)), POINTER(c_int))),
    ('_on_after_created', CEFCALLBACK(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))),
    ('_do_close', CEFCALLBACK(c_int, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))),
    ('_on_before_close', CEFCALLBACK(c_void, POINTER(cef_life_span_handler_t), POINTER(cef_browser_t))),
)
cef_load_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_loading_state_change', CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), c_int, c_int, c_int)),
    ('_on_load_start', CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefTransitionType)),
    ('_on_load_end', CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), c_int)),
    ('_on_load_error', CEFCALLBACK(c_void, POINTER(cef_load_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefErrorCode, POINTER(cef_string_t), POINTER(cef_string_t))),
)
cef_media_router_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_add_observer', CEFCALLBACK(POINTER(cef_registration_t), POINTER(cef_media_router_t), POINTER(cef_media_observer_t))),
    ('_get_source', CEFCALLBACK(POINTER(cef_media_source_t), POINTER(cef_media_router_t), POINTER(cef_string_t))),
    ('_notify_current_sinks', CEFCALLBACK(c_void, POINTER(cef_media_router_t))),
    ('_create_route', CEFCALLBACK(c_void, POINTER(cef_media_router_t), POINTER(cef_media_source_t), POINTER(cef_media_sink_t), POINTER(cef_media_route_create_callback_t))),
    ('_notify_current_routes', CEFCALLBACK(c_void, POINTER(cef_media_router_t))),
)
cef_media_observer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_sinks', CEFCALLBACK(c_void, POINTER(cef_media_observer_t), c_size_t, POINTER(POINTER(cef_media_sink_t)))),
    ('_on_routes', CEFCALLBACK(c_void, POINTER(cef_media_observer_t), c_size_t, POINTER(POINTER(cef_media_route_t)))),
    ('_on_route_state_changed', CEFCALLBACK(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), CefMediaRouteConnectionState)),
    ('_on_route_message_received', CEFCALLBACK(c_void, POINTER(cef_media_observer_t), POINTER(cef_media_route_t), c_void_p, c_size_t)),
)
cef_media_route_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_id', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_media_route_t))),
    ('_get_source', CEFCALLBACK(POINTER(cef_media_source_t), POINTER(cef_media_route_t))),
    ('_get_sink', CEFCALLBACK(POINTER(cef_media_sink_t), POINTER(cef_media_route_t))),
    ('_send_route_message', CEFCALLBACK(c_void, POINTER(cef_media_route_t), c_void_p, c_size_t)),
    ('_terminate', CEFCALLBACK(c_void, POINTER(cef_media_route_t))),
)
cef_media_route_create_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_media_route_create_finished', CEFCALLBACK(c_void, POINTER(cef_media_route_create_callback_t), CefMediaRouteCreateResult, POINTER(cef_string_t), POINTER(cef_media_route_t))),
)
cef_media_sink_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_id', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_media_sink_t))),
    ('_get_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_media_sink_t))),
    ('_get_description', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_media_sink_t))),
    ('_get_icon_type', CEFCALLBACK(CefMediaSinkIconType, POINTER(cef_media_sink_t))),
    ('_get_device_info', CEFCALLBACK(c_void, POINTER(cef_media_sink_t), POINTER(cef_media_sink_device_info_callback_t))),
    ('_is_cast_sink', CEFCALLBACK(c_int, POINTER(cef_media_sink_t))),
    ('_is_dial_sink', CEFCALLBACK(c_int, POINTER(cef_media_sink_t))),
    ('_is_compatible_with', CEFCALLBACK(c_int, POINTER(cef_media_sink_t), POINTER(cef_media_source_t))),
)
cef_media_sink_device_info_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_media_sink_device_info', CEFCALLBACK(c_void, POINTER(cef_media_sink_device_info_callback_t), POINTER(cef_media_sink_device_info_t))),
)
cef_media_source_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_id', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_media_source_t))),
    ('_is_cast_source', CEFCALLBACK(c_int, POINTER(cef_media_source_t))),
    ('_is_dial_source', CEFCALLBACK(c_int, POINTER(cef_media_source_t))),
)
cef_menu_model_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_sub_menu', CEFCALLBACK(c_int, POINTER(cef_menu_model_t))),
    ('_clear', CEFCALLBACK(c_int, POINTER(cef_menu_model_t))),
    ('_get_count', CEFCALLBACK(c_int, POINTER(cef_menu_model_t))),
    ('_add_separator', CEFCALLBACK(c_int, POINTER(cef_menu_model_t))),
    ('_add_item', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_add_check_item', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_add_radio_item', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t), c_int)),
    ('_add_sub_menu', CEFCALLBACK(POINTER(cef_menu_model_t), POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_insert_separator_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_insert_item_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int, POINTER(cef_string_t))),
    ('_insert_check_item_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int, POINTER(cef_string_t))),
    ('_insert_radio_item_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int, POINTER(cef_string_t), c_int)),
    ('_insert_sub_menu_at', CEFCALLBACK(POINTER(cef_menu_model_t), POINTER(cef_menu_model_t), c_int, c_int, POINTER(cef_string_t))),
    ('_remove', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_remove_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_get_index_of', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_get_command_id_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_command_id_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_get_label', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_menu_model_t), c_int)),
    ('_get_label_at', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_menu_model_t), c_int)),
    ('_set_label', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_set_label_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_get_type', CEFCALLBACK(CefMenuItemType, POINTER(cef_menu_model_t), c_int)),
    ('_get_type_at', CEFCALLBACK(CefMenuItemType, POINTER(cef_menu_model_t), c_int)),
    ('_get_group_id', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_get_group_id_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_group_id', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_set_group_id_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_get_sub_menu', CEFCALLBACK(POINTER(cef_menu_model_t), POINTER(cef_menu_model_t), c_int)),
    ('_get_sub_menu_at', CEFCALLBACK(POINTER(cef_menu_model_t), POINTER(cef_menu_model_t), c_int)),
    ('_is_visible', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_is_visible_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_visible', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_set_visible_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_is_enabled', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_is_enabled_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_enabled', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_set_enabled_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_is_checked', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_is_checked_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_checked', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_set_checked_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int)),
    ('_has_accelerator', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_has_accelerator_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_set_accelerator', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int, c_int, c_int, c_int)),
    ('_set_accelerator_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, c_int, c_int, c_int, c_int)),
    ('_remove_accelerator', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_remove_accelerator_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int)),
    ('_get_accelerator', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int))),
    ('_get_accelerator_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int))),
    ('_set_color', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, CefMenuColorType, c_uint)),
    ('_set_color_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, CefMenuColorType, c_uint)),
    ('_get_color', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, CefMenuColorType, POINTER(c_uint))),
    ('_get_color_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, CefMenuColorType, POINTER(c_uint))),
    ('_set_font_list', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
    ('_set_font_list_at', CEFCALLBACK(c_int, POINTER(cef_menu_model_t), c_int, POINTER(cef_string_t))),
)
cef_menu_model_delegate_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_execute_command', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int, CefEventFlags)),
    ('_mouse_outside_menu', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_point_t))),
    ('_unhandled_open_submenu', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int)),
    ('_unhandled_close_submenu', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), c_int)),
    ('_menu_will_show', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t))),
    ('_menu_closed', CEFCALLBACK(c_void, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t))),
    ('_format_label', CEFCALLBACK(c_int, POINTER(cef_menu_model_delegate_t), POINTER(cef_menu_model_t), POINTER(cef_string_t))),
)
cef_navigation_entry_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_navigation_entry_t))),
    ('_get_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_navigation_entry_t))),
    ('_get_display_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_navigation_entry_t))),
    ('_get_original_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_navigation_entry_t))),
    ('_get_title', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_navigation_entry_t))),
    ('_get_transition_type', CEFCALLBACK(CefTransitionType, POINTER(cef_navigation_entry_t))),
    ('_has_post_data', CEFCALLBACK(c_int, POINTER(cef_navigation_entry_t))),
    ('_get_completion_time', CEFCALLBACK(cef_time_t, POINTER(cef_navigation_entry_t))),
    ('_get_http_status_code', CEFCALLBACK(c_int, POINTER(cef_navigation_entry_t))),
    ('_get_sslstatus', CEFCALLBACK(POINTER(cef_sslstatus_t), POINTER(cef_navigation_entry_t))),
)
cef_print_dialog_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_print_dialog_callback_t), POINTER(cef_print_settings_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_print_dialog_callback_t))),
)
cef_print_job_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_print_job_callback_t))),
)
cef_print_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_print_start', CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t))),
    ('_on_print_settings', CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_print_settings_t), c_int)),
    ('_on_print_dialog', CEFCALLBACK(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_print_dialog_callback_t))),
    ('_on_print_job', CEFCALLBACK(c_int, POINTER(cef_print_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_print_job_callback_t))),
    ('_on_print_reset', CEFCALLBACK(c_void, POINTER(cef_print_handler_t), POINTER(cef_browser_t))),
    ('_get_pdf_paper_size', CEFCALLBACK(cef_size_t, POINTER(cef_print_handler_t), POINTER(cef_browser_t), c_int)),
)
cef_print_settings_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_orientation', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_int)),
    ('_is_landscape', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_printer_printable_area', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), POINTER(cef_size_t), POINTER(cef_rect_t), c_int)),
    ('_set_device_name', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), POINTER(cef_string_t))),
    ('_get_device_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_print_settings_t))),
    ('_set_dpi', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_int)),
    ('_get_dpi', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_page_ranges', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_size_t, POINTER(cef_range_t))),
    ('_get_page_ranges_count', CEFCALLBACK(c_size_t, POINTER(cef_print_settings_t))),
    ('_get_page_ranges', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), POINTER(c_size_t), POINTER(cef_range_t))),
    ('_set_selection_only', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_int)),
    ('_is_selection_only', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_collate', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_int)),
    ('_will_collate', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_color_model', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), CefColorModel)),
    ('_get_color_model', CEFCALLBACK(CefColorModel, POINTER(cef_print_settings_t))),
    ('_set_copies', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), c_int)),
    ('_get_copies', CEFCALLBACK(c_int, POINTER(cef_print_settings_t))),
    ('_set_duplex_mode', CEFCALLBACK(c_void, POINTER(cef_print_settings_t), CefDuplexMode)),
    ('_get_duplex_mode', CEFCALLBACK(CefDuplexMode, POINTER(cef_print_settings_t))),
)
cef_process_message_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_process_message_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_process_message_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_process_message_t), POINTER(cef_process_message_t))),
    ('_get_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_process_message_t))),
    ('_get_argument_list', CEFCALLBACK(POINTER(cef_list_value_t), POINTER(cef_process_message_t))),
)
cef_registration_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
)
cef_render_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_accessibility_handler', CEFCALLBACK(POINTER(cef_accessibility_handler_t), POINTER(cef_render_handler_t))),
    ('_get_root_screen_rect', CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))),
    ('_get_view_rect', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))),
    ('_get_screen_point', CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int, c_int, POINTER(c_int), POINTER(c_int))),
    ('_get_screen_info', CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_screen_info_t))),
    ('_on_popup_show', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_int)),
    ('_on_popup_size', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_rect_t))),
    ('_on_paint', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefPaintElementType, c_size_t, POINTER(cef_rect_t), c_void_p, c_int, c_int)),
    ('_on_accelerated_paint', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefPaintElementType, c_size_t, POINTER(cef_rect_t), c_void_p)),
    ('_start_dragging', CEFCALLBACK(c_int, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_drag_data_t), CefDragOperationsMask, c_int, c_int)),
    ('_update_drag_cursor', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefDragOperationsMask)),
    ('_on_scroll_offset_changed', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), c_double, c_double)),
    ('_on_ime_composition_range_changed', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_range_t), c_size_t, POINTER(cef_rect_t))),
    ('_on_text_selection_changed', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), POINTER(cef_range_t))),
    ('_on_virtual_keyboard_requested', CEFCALLBACK(c_void, POINTER(cef_render_handler_t), POINTER(cef_browser_t), CefTextInputMode)),
)
cef_render_process_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_web_kit_initialized', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t))),
    ('_on_browser_created', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_dictionary_value_t))),
    ('_on_browser_destroyed', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t))),
    ('_get_load_handler', CEFCALLBACK(POINTER(cef_load_handler_t), POINTER(cef_render_process_handler_t))),
    ('_on_context_created', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t))),
    ('_on_context_released', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t))),
    ('_on_uncaught_exception', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_v8context_t), POINTER(cef_v8exception_t), POINTER(cef_v8stack_trace_t))),
    ('_on_focused_node_changed', CEFCALLBACK(c_void, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_domnode_t))),
    ('_on_process_message_received', CEFCALLBACK(c_int, POINTER(cef_render_process_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), CefProcessId, POINTER(cef_process_message_t))),
)
cef_request_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_request_t))),
    ('_get_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_t))),
    ('_set_url', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t))),
    ('_get_method', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_t))),
    ('_set_method', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t))),
    ('_set_referrer', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t), CefReferrerPolicy)),
    ('_get_referrer_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_t))),
    ('_get_referrer_policy', CEFCALLBACK(CefReferrerPolicy, POINTER(cef_request_t))),
    ('_get_post_data', CEFCALLBACK(POINTER(cef_post_data_t), POINTER(cef_request_t))),
    ('_set_post_data', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_post_data_t))),
    ('_get_header_map', CEFCALLBACK(c_void, POINTER(cef_request_t), cef_string_multimap_t)),
    ('_set_header_map', CEFCALLBACK(c_void, POINTER(cef_request_t), cef_string_multimap_t)),
    ('_get_header_by_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_t), POINTER(cef_string_t))),
    ('_set_header_by_name', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int)),
    ('_set', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_post_data_t), cef_string_multimap_t)),
    ('_get_flags', CEFCALLBACK(c_int, POINTER(cef_request_t))),
    ('_set_flags', CEFCALLBACK(c_void, POINTER(cef_request_t), c_int)),
    ('_get_first_party_for_cookies', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_t))),
    ('_set_first_party_for_cookies', CEFCALLBACK(c_void, POINTER(cef_request_t), POINTER(cef_string_t))),
    ('_get_resource_type', CEFCALLBACK(CefResourceType, POINTER(cef_request_t))),
    ('_get_transition_type', CEFCALLBACK(CefTransitionType, POINTER(cef_request_t))),
    ('_get_identifier', CEFCALLBACK(c_ulong, POINTER(cef_request_t))),
)
cef_post_data_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_post_data_t))),
    ('_has_excluded_elements', CEFCALLBACK(c_int, POINTER(cef_post_data_t))),
    ('_get_element_count', CEFCALLBACK(c_size_t, POINTER(cef_post_data_t))),
    ('_get_elements', CEFCALLBACK(c_void, POINTER(cef_post_data_t), POINTER(c_size_t), POINTER(POINTER(cef_post_data_element_t)))),
    ('_remove_element', CEFCALLBACK(c_int, POINTER(cef_post_data_t), POINTER(cef_post_data_element_t))),
    ('_add_element', CEFCALLBACK(c_int, POINTER(cef_post_data_t), POINTER(cef_post_data_element_t))),
    ('_remove_elements', CEFCALLBACK(c_void, POINTER(cef_post_data_t))),
)
cef_post_data_element_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_post_data_element_t))),
    ('_set_to_empty', CEFCALLBACK(c_void, POINTER(cef_post_data_element_t))),
    ('_set_to_file', CEFCALLBACK(c_void, POINTER(cef_post_data_element_t), POINTER(cef_string_t))),
    ('_set_to_bytes', CEFCALLBACK(c_void, POINTER(cef_post_data_element_t), c_size_t, c_void_p)),
    ('_get_type', CEFCALLBACK(CefPostDataElementType, POINTER(cef_post_data_element_t))),
    ('_get_file', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_post_data_element_t))),
    ('_get_bytes_count', CEFCALLBACK(c_size_t, POINTER(cef_post_data_element_t))),
    ('_get_bytes', CEFCALLBACK(c_size_t, POINTER(cef_post_data_element_t), c_size_t, c_void_p)),
)
cef_resolve_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_resolve_completed', CEFCALLBACK(c_void, POINTER(cef_resolve_callback_t), CefErrorCode, cef_string_list_t)),
)
cef_request_context_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_request_context_t))),
    ('_is_sharing_with', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_request_context_t))),
    ('_is_global', CEFCALLBACK(c_int, POINTER(cef_request_context_t))),
    ('_get_handler', CEFCALLBACK(POINTER(cef_request_context_handler_t), POINTER(cef_request_context_t))),
    ('_get_cache_path', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_request_context_t))),
    ('_get_cookie_manager', CEFCALLBACK(POINTER(cef_cookie_manager_t), POINTER(cef_request_context_t), POINTER(cef_completion_callback_t))),
    ('_register_scheme_handler_factory', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_scheme_handler_factory_t))),
    ('_clear_scheme_handler_factories', CEFCALLBACK(c_int, POINTER(cef_request_context_t))),
    ('_has_preference', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_get_preference', CEFCALLBACK(POINTER(cef_value_t), POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_get_all_preferences', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_request_context_t), c_int)),
    ('_can_set_preference', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_set_preference', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_value_t), POINTER(cef_string_t))),
    ('_clear_certificate_exceptions', CEFCALLBACK(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t))),
    ('_clear_http_auth_credentials', CEFCALLBACK(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t))),
    ('_close_all_connections', CEFCALLBACK(c_void, POINTER(cef_request_context_t), POINTER(cef_completion_callback_t))),
    ('_resolve_host', CEFCALLBACK(c_void, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_resolve_callback_t))),
    ('_load_extension', CEFCALLBACK(c_void, POINTER(cef_request_context_t), POINTER(cef_string_t), POINTER(cef_dictionary_value_t), POINTER(cef_extension_handler_t))),
    ('_did_load_extension', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_has_extension', CEFCALLBACK(c_int, POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_get_extensions', CEFCALLBACK(c_int, POINTER(cef_request_context_t), cef_string_list_t)),
    ('_get_extension', CEFCALLBACK(POINTER(cef_extension_t), POINTER(cef_request_context_t), POINTER(cef_string_t))),
    ('_get_media_router', CEFCALLBACK(POINTER(cef_media_router_t), POINTER(cef_request_context_t), POINTER(cef_completion_callback_t))),
)
cef_request_context_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_request_context_initialized', CEFCALLBACK(c_void, POINTER(cef_request_context_handler_t), POINTER(cef_request_context_t))),
    ('_get_resource_request_handler', CEFCALLBACK(POINTER(cef_resource_request_handler_t), POINTER(cef_request_context_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int))),
)
cef_select_client_certificate_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_select', CEFCALLBACK(c_void, POINTER(cef_select_client_certificate_callback_t), POINTER(cef_x509certificate_t))),
)
cef_request_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_before_browse', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int)),
    ('_on_open_urlfrom_tab', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), CefWindowOpenDisposition, c_int)),
    ('_get_resource_request_handler', CEFCALLBACK(POINTER(cef_resource_request_handler_t), POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), c_int, c_int, POINTER(cef_string_t), POINTER(c_int))),
    ('_get_auth_credentials', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t))),
    ('_on_quota_request', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), POINTER(cef_string_t), c_long, POINTER(cef_callback_t))),
    ('_on_certificate_error', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), CefErrorCode, POINTER(cef_string_t), POINTER(cef_sslinfo_t), POINTER(cef_callback_t))),
    ('_on_select_client_certificate', CEFCALLBACK(c_int, POINTER(cef_request_handler_t), POINTER(cef_browser_t), c_int, POINTER(cef_string_t), c_int, c_size_t, POINTER(POINTER(cef_x509certificate_t)), POINTER(cef_select_client_certificate_callback_t))),
    ('_on_render_view_ready', CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t))),
    ('_on_render_process_terminated', CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t), CefTerminationStatus)),
    ('_on_document_available_in_main_frame', CEFCALLBACK(c_void, POINTER(cef_request_handler_t), POINTER(cef_browser_t))),
)
cef_resource_bundle_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_localized_string', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_resource_bundle_t), c_int)),
    ('_get_data_resource', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_resource_bundle_t), c_int)),
    ('_get_data_resource_for_scale', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_resource_bundle_t), c_int, CefScaleFactor)),
)
cef_resource_bundle_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_localized_string', CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(cef_string_t))),
    ('_get_data_resource', CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, POINTER(c_void_p), POINTER(c_size_t))),
    ('_get_data_resource_for_scale', CEFCALLBACK(c_int, POINTER(cef_resource_bundle_handler_t), c_int, CefScaleFactor, POINTER(c_void_p), POINTER(c_size_t))),
)
cef_resource_skip_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_resource_skip_callback_t), c_long)),
)
cef_resource_read_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_cont', CEFCALLBACK(c_void, POINTER(cef_resource_read_callback_t), c_int)),
)
cef_resource_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_open', CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(c_int), POINTER(cef_callback_t))),
    ('_process_request', CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), POINTER(cef_request_t), POINTER(cef_callback_t))),
    ('_get_response_headers', CEFCALLBACK(c_void, POINTER(cef_resource_handler_t), POINTER(cef_response_t), POINTER(c_long), POINTER(cef_string_t))),
    ('_skip', CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_long, POINTER(c_long), POINTER(cef_resource_skip_callback_t))),
    ('_read', CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_void_p, c_int, POINTER(c_int), POINTER(cef_resource_read_callback_t))),
    ('_read_response', CEFCALLBACK(c_int, POINTER(cef_resource_handler_t), c_void_p, c_int, POINTER(c_int), POINTER(cef_callback_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_resource_handler_t))),
)
cef_resource_request_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_cookie_access_filter', CEFCALLBACK(POINTER(cef_cookie_access_filter_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t))),
    ('_on_before_resource_load', CEFCALLBACK(CefReturnValue, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_callback_t))),
    ('_get_resource_handler', CEFCALLBACK(POINTER(cef_resource_handler_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t))),
    ('_on_resource_redirect', CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_string_t))),
    ('_on_resource_response', CEFCALLBACK(c_int, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t))),
    ('_get_resource_response_filter', CEFCALLBACK(POINTER(cef_response_filter_t), POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t))),
    ('_on_resource_load_complete', CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), CefUrlRequestStatus, c_long)),
    ('_on_protocol_execution', CEFCALLBACK(c_void, POINTER(cef_resource_request_handler_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(c_int))),
)
cef_cookie_access_filter_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_can_send_cookie', CEFCALLBACK(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_cookie_t))),
    ('_can_save_cookie', CEFCALLBACK(c_int, POINTER(cef_cookie_access_filter_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_request_t), POINTER(cef_response_t), POINTER(cef_cookie_t))),
)
cef_response_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_response_t))),
    ('_get_error', CEFCALLBACK(CefErrorCode, POINTER(cef_response_t))),
    ('_set_error', CEFCALLBACK(c_void, POINTER(cef_response_t), CefErrorCode)),
    ('_get_status', CEFCALLBACK(c_int, POINTER(cef_response_t))),
    ('_set_status', CEFCALLBACK(c_void, POINTER(cef_response_t), c_int)),
    ('_get_status_text', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_response_t))),
    ('_set_status_text', CEFCALLBACK(c_void, POINTER(cef_response_t), POINTER(cef_string_t))),
    ('_get_mime_type', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_response_t))),
    ('_set_mime_type', CEFCALLBACK(c_void, POINTER(cef_response_t), POINTER(cef_string_t))),
    ('_get_charset', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_response_t))),
    ('_set_charset', CEFCALLBACK(c_void, POINTER(cef_response_t), POINTER(cef_string_t))),
    ('_get_header_by_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_response_t), POINTER(cef_string_t))),
    ('_set_header_by_name', CEFCALLBACK(c_void, POINTER(cef_response_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int)),
    ('_get_header_map', CEFCALLBACK(c_void, POINTER(cef_response_t), cef_string_multimap_t)),
    ('_set_header_map', CEFCALLBACK(c_void, POINTER(cef_response_t), cef_string_multimap_t)),
    ('_get_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_response_t))),
    ('_set_url', CEFCALLBACK(c_void, POINTER(cef_response_t), POINTER(cef_string_t))),
)
cef_response_filter_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_init_filter', CEFCALLBACK(c_int, POINTER(cef_response_filter_t))),
    ('_filter', CEFCALLBACK(CefResponseFilterStatus, POINTER(cef_response_filter_t), c_void_p, c_size_t, POINTER(c_size_t), c_void_p, c_size_t, POINTER(c_size_t))),
)
cef_scheme_registrar_t._fields_ = (
    ('_base', cef_base_scoped_t),
    ('_add_custom_scheme', CEFCALLBACK(c_int, POINTER(cef_scheme_registrar_t), POINTER(cef_string_t), c_int)),
)
cef_scheme_handler_factory_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_create', CEFCALLBACK(POINTER(cef_resource_handler_t), POINTER(cef_scheme_handler_factory_t), POINTER(cef_browser_t), POINTER(cef_frame_t), POINTER(cef_string_t), POINTER(cef_request_t))),
)
cef_server_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_task_runner', CEFCALLBACK(POINTER(cef_task_runner_t), POINTER(cef_server_t))),
    ('_shutdown', CEFCALLBACK(c_void, POINTER(cef_server_t))),
    ('_is_running', CEFCALLBACK(c_int, POINTER(cef_server_t))),
    ('_get_address', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_server_t))),
    ('_has_connection', CEFCALLBACK(c_int, POINTER(cef_server_t))),
    ('_is_valid_connection', CEFCALLBACK(c_int, POINTER(cef_server_t), c_int)),
    ('_send_http200response', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int, POINTER(cef_string_t), c_void_p, c_size_t)),
    ('_send_http404response', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int)),
    ('_send_http500response', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int, POINTER(cef_string_t))),
    ('_send_http_response', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int, c_int, POINTER(cef_string_t), c_long, cef_string_multimap_t)),
    ('_send_raw_data', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int, c_void_p, c_size_t)),
    ('_close_connection', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int)),
    ('_send_web_socket_message', CEFCALLBACK(c_void, POINTER(cef_server_t), c_int, c_void_p, c_size_t)),
)
cef_server_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_server_created', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t))),
    ('_on_server_destroyed', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t))),
    ('_on_client_connected', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)),
    ('_on_client_disconnected', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)),
    ('_on_http_request', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t))),
    ('_on_web_socket_request', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, POINTER(cef_string_t), POINTER(cef_request_t), POINTER(cef_callback_t))),
    ('_on_web_socket_connected', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int)),
    ('_on_web_socket_message', CEFCALLBACK(c_void, POINTER(cef_server_handler_t), POINTER(cef_server_t), c_int, c_void_p, c_size_t)),
)
cef_sslinfo_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_cert_status', CEFCALLBACK(CefCertStatus, POINTER(cef_sslinfo_t))),
    ('_get_x509certificate', CEFCALLBACK(POINTER(cef_x509certificate_t), POINTER(cef_sslinfo_t))),
)
cef_sslstatus_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_secure_connection', CEFCALLBACK(c_int, POINTER(cef_sslstatus_t))),
    ('_get_cert_status', CEFCALLBACK(CefCertStatus, POINTER(cef_sslstatus_t))),
    ('_get_sslversion', CEFCALLBACK(CefSslVersion, POINTER(cef_sslstatus_t))),
    ('_get_content_status', CEFCALLBACK(CefSslContentStatus, POINTER(cef_sslstatus_t))),
    ('_get_x509certificate', CEFCALLBACK(POINTER(cef_x509certificate_t), POINTER(cef_sslstatus_t))),
)
cef_read_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_read', CEFCALLBACK(c_size_t, POINTER(cef_read_handler_t), c_void_p, c_size_t, c_size_t)),
    ('_seek', CEFCALLBACK(c_int, POINTER(cef_read_handler_t), c_long, c_int)),
    ('_tell', CEFCALLBACK(c_long, POINTER(cef_read_handler_t))),
    ('_eof', CEFCALLBACK(c_int, POINTER(cef_read_handler_t))),
    ('_may_block', CEFCALLBACK(c_int, POINTER(cef_read_handler_t))),
)
cef_stream_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_read', CEFCALLBACK(c_size_t, POINTER(cef_stream_reader_t), c_void_p, c_size_t, c_size_t)),
    ('_seek', CEFCALLBACK(c_int, POINTER(cef_stream_reader_t), c_long, c_int)),
    ('_tell', CEFCALLBACK(c_long, POINTER(cef_stream_reader_t))),
    ('_eof', CEFCALLBACK(c_int, POINTER(cef_stream_reader_t))),
    ('_may_block', CEFCALLBACK(c_int, POINTER(cef_stream_reader_t))),
)
cef_write_handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_write', CEFCALLBACK(c_size_t, POINTER(cef_write_handler_t), c_void_p, c_size_t, c_size_t)),
    ('_seek', CEFCALLBACK(c_int, POINTER(cef_write_handler_t), c_long, c_int)),
    ('_tell', CEFCALLBACK(c_long, POINTER(cef_write_handler_t))),
    ('_flush', CEFCALLBACK(c_int, POINTER(cef_write_handler_t))),
    ('_may_block', CEFCALLBACK(c_int, POINTER(cef_write_handler_t))),
)
cef_stream_writer_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_write', CEFCALLBACK(c_size_t, POINTER(cef_stream_writer_t), c_void_p, c_size_t, c_size_t)),
    ('_seek', CEFCALLBACK(c_int, POINTER(cef_stream_writer_t), c_long, c_int)),
    ('_tell', CEFCALLBACK(c_long, POINTER(cef_stream_writer_t))),
    ('_flush', CEFCALLBACK(c_int, POINTER(cef_stream_writer_t))),
    ('_may_block', CEFCALLBACK(c_int, POINTER(cef_stream_writer_t))),
)
cef_string_visitor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_visit', CEFCALLBACK(c_void, POINTER(cef_string_visitor_t), POINTER(cef_string_t))),
)
cef_task_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_execute', CEFCALLBACK(c_void, POINTER(cef_task_t))),
)
cef_task_runner_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_runner_t))),
    ('_belongs_to_current_thread', CEFCALLBACK(c_int, POINTER(cef_task_runner_t))),
    ('_belongs_to_thread', CEFCALLBACK(c_int, POINTER(cef_task_runner_t), CefThreadId)),
    ('_post_task', CEFCALLBACK(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_t))),
    ('_post_delayed_task', CEFCALLBACK(c_int, POINTER(cef_task_runner_t), POINTER(cef_task_t), c_long)),
)
cef_end_tracing_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_end_tracing_complete', CEFCALLBACK(c_void, POINTER(cef_end_tracing_callback_t), POINTER(cef_string_t))),
)
cef_urlrequest_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_request', CEFCALLBACK(POINTER(cef_request_t), POINTER(cef_urlrequest_t))),
    ('_get_client', CEFCALLBACK(POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t))),
    ('_get_request_status', CEFCALLBACK(CefUrlRequestStatus, POINTER(cef_urlrequest_t))),
    ('_get_request_error', CEFCALLBACK(CefErrorCode, POINTER(cef_urlrequest_t))),
    ('_get_response', CEFCALLBACK(POINTER(cef_response_t), POINTER(cef_urlrequest_t))),
    ('_response_was_cached', CEFCALLBACK(c_int, POINTER(cef_urlrequest_t))),
    ('_cancel', CEFCALLBACK(c_void, POINTER(cef_urlrequest_t))),
)
cef_urlrequest_client_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_on_request_complete', CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t))),
    ('_on_upload_progress', CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_long, c_long)),
    ('_on_download_progress', CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_long, c_long)),
    ('_on_download_data', CEFCALLBACK(c_void, POINTER(cef_urlrequest_client_t), POINTER(cef_urlrequest_t), c_void_p, c_size_t)),
    ('_get_auth_credentials', CEFCALLBACK(c_int, POINTER(cef_urlrequest_client_t), c_int, POINTER(cef_string_t), c_int, POINTER(cef_string_t), POINTER(cef_string_t), POINTER(cef_auth_callback_t))),
)
cef_v8context_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_task_runner', CEFCALLBACK(POINTER(cef_task_runner_t), POINTER(cef_v8context_t))),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_v8context_t))),
    ('_get_browser', CEFCALLBACK(POINTER(cef_browser_t), POINTER(cef_v8context_t))),
    ('_get_frame', CEFCALLBACK(POINTER(cef_frame_t), POINTER(cef_v8context_t))),
    ('_get_global', CEFCALLBACK(POINTER(cef_v8value_t), POINTER(cef_v8context_t))),
    ('_enter', CEFCALLBACK(c_int, POINTER(cef_v8context_t))),
    ('_exit', CEFCALLBACK(c_int, POINTER(cef_v8context_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_v8context_t), POINTER(cef_v8context_t))),
    ('_eval', CEFCALLBACK(c_int, POINTER(cef_v8context_t), POINTER(cef_string_t), POINTER(cef_string_t), c_int, POINTER(POINTER(cef_v8value_t)), POINTER(POINTER(cef_v8exception_t)))),
)
cef_v8handler_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_execute', CEFCALLBACK(c_int, POINTER(cef_v8handler_t), POINTER(cef_string_t), POINTER(cef_v8value_t), c_size_t, POINTER(POINTER(cef_v8value_t)), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))),
)
cef_v8accessor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get', CEFCALLBACK(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))),
    ('_set', CEFCALLBACK(c_int, POINTER(cef_v8accessor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))),
)
cef_v8interceptor_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_byname', CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))),
    ('_get_byindex', CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(POINTER(cef_v8value_t)), POINTER(cef_string_t))),
    ('_set_byname', CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), POINTER(cef_string_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))),
    ('_set_byindex', CEFCALLBACK(c_int, POINTER(cef_v8interceptor_t), c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))),
)
cef_v8exception_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_message', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8exception_t))),
    ('_get_source_line', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8exception_t))),
    ('_get_script_resource_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8exception_t))),
    ('_get_line_number', CEFCALLBACK(c_int, POINTER(cef_v8exception_t))),
    ('_get_start_position', CEFCALLBACK(c_int, POINTER(cef_v8exception_t))),
    ('_get_end_position', CEFCALLBACK(c_int, POINTER(cef_v8exception_t))),
    ('_get_start_column', CEFCALLBACK(c_int, POINTER(cef_v8exception_t))),
    ('_get_end_column', CEFCALLBACK(c_int, POINTER(cef_v8exception_t))),
)
cef_v8array_buffer_release_callback_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_release_buffer', CEFCALLBACK(c_void, POINTER(cef_v8array_buffer_release_callback_t), c_void_p)),
)
cef_v8value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_undefined', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_null', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_bool', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_int', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_uint', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_double', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_date', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_string', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_object', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_array', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_array_buffer', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_function', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_v8value_t))),
    ('_get_bool_value', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_get_int_value', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_get_uint_value', CEFCALLBACK(c_uint, POINTER(cef_v8value_t))),
    ('_get_double_value', CEFCALLBACK(c_double, POINTER(cef_v8value_t))),
    ('_get_date_value', CEFCALLBACK(cef_time_t, POINTER(cef_v8value_t))),
    ('_get_string_value', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8value_t))),
    ('_is_user_created', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_has_exception', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_get_exception', CEFCALLBACK(POINTER(cef_v8exception_t), POINTER(cef_v8value_t))),
    ('_clear_exception', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_will_rethrow_exceptions', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_set_rethrow_exceptions', CEFCALLBACK(c_int, POINTER(cef_v8value_t), c_int)),
    ('_has_value_bykey', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t))),
    ('_has_value_byindex', CEFCALLBACK(c_int, POINTER(cef_v8value_t), c_int)),
    ('_delete_value_bykey', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t))),
    ('_delete_value_byindex', CEFCALLBACK(c_int, POINTER(cef_v8value_t), c_int)),
    ('_get_value_bykey', CEFCALLBACK(POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_string_t))),
    ('_get_value_byindex', CEFCALLBACK(POINTER(cef_v8value_t), POINTER(cef_v8value_t), c_int)),
    ('_set_value_bykey', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t), POINTER(cef_v8value_t), CefV8PropertyAttribute)),
    ('_set_value_byindex', CEFCALLBACK(c_int, POINTER(cef_v8value_t), c_int, POINTER(cef_v8value_t))),
    ('_set_value_byaccessor', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_string_t), CefV8AccessControl, CefV8PropertyAttribute)),
    ('_get_keys', CEFCALLBACK(c_int, POINTER(cef_v8value_t), cef_string_list_t)),
    ('_set_user_data', CEFCALLBACK(c_int, POINTER(cef_v8value_t), POINTER(cef_base_ref_counted_t))),
    ('_get_user_data', CEFCALLBACK(POINTER(cef_base_ref_counted_t), POINTER(cef_v8value_t))),
    ('_get_externally_allocated_memory', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_adjust_externally_allocated_memory', CEFCALLBACK(c_int, POINTER(cef_v8value_t), c_int)),
    ('_get_array_length', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_get_array_buffer_release_callback', CEFCALLBACK(POINTER(cef_v8array_buffer_release_callback_t), POINTER(cef_v8value_t))),
    ('_neuter_array_buffer', CEFCALLBACK(c_int, POINTER(cef_v8value_t))),
    ('_get_function_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8value_t))),
    ('_get_function_handler', CEFCALLBACK(POINTER(cef_v8handler_t), POINTER(cef_v8value_t))),
    ('_execute_function', CEFCALLBACK(POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_v8value_t), c_size_t, POINTER(POINTER(cef_v8value_t)))),
    ('_execute_function_with_context', CEFCALLBACK(POINTER(cef_v8value_t), POINTER(cef_v8value_t), POINTER(cef_v8context_t), POINTER(cef_v8value_t), c_size_t, POINTER(POINTER(cef_v8value_t)))),
)
cef_v8stack_trace_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_v8stack_trace_t))),
    ('_get_frame_count', CEFCALLBACK(c_int, POINTER(cef_v8stack_trace_t))),
    ('_get_frame', CEFCALLBACK(POINTER(cef_v8stack_frame_t), POINTER(cef_v8stack_trace_t), c_int)),
)
cef_v8stack_frame_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_v8stack_frame_t))),
    ('_get_script_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8stack_frame_t))),
    ('_get_script_name_or_source_url', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8stack_frame_t))),
    ('_get_function_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_v8stack_frame_t))),
    ('_get_line_number', CEFCALLBACK(c_int, POINTER(cef_v8stack_frame_t))),
    ('_get_column', CEFCALLBACK(c_int, POINTER(cef_v8stack_frame_t))),
    ('_is_eval', CEFCALLBACK(c_int, POINTER(cef_v8stack_frame_t))),
    ('_is_constructor', CEFCALLBACK(c_int, POINTER(cef_v8stack_frame_t))),
)
cef_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_is_owned', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_value_t))),
    ('_is_equal', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_value_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_value_t), POINTER(cef_value_t))),
    ('_get_type', CEFCALLBACK(CefValueType, POINTER(cef_value_t))),
    ('_get_bool', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_get_int', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_get_double', CEFCALLBACK(c_double, POINTER(cef_value_t))),
    ('_get_string', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_value_t))),
    ('_get_binary', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_value_t))),
    ('_get_dictionary', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_value_t))),
    ('_get_list', CEFCALLBACK(POINTER(cef_list_value_t), POINTER(cef_value_t))),
    ('_set_null', CEFCALLBACK(c_int, POINTER(cef_value_t))),
    ('_set_bool', CEFCALLBACK(c_int, POINTER(cef_value_t), c_int)),
    ('_set_int', CEFCALLBACK(c_int, POINTER(cef_value_t), c_int)),
    ('_set_double', CEFCALLBACK(c_int, POINTER(cef_value_t), c_double)),
    ('_set_string', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_string_t))),
    ('_set_binary', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_binary_value_t))),
    ('_set_dictionary', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_dictionary_value_t))),
    ('_set_list', CEFCALLBACK(c_int, POINTER(cef_value_t), POINTER(cef_list_value_t))),
)
cef_binary_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_binary_value_t))),
    ('_is_owned', CEFCALLBACK(c_int, POINTER(cef_binary_value_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_binary_value_t), POINTER(cef_binary_value_t))),
    ('_is_equal', CEFCALLBACK(c_int, POINTER(cef_binary_value_t), POINTER(cef_binary_value_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_binary_value_t))),
    ('_get_size', CEFCALLBACK(c_size_t, POINTER(cef_binary_value_t))),
    ('_get_data', CEFCALLBACK(c_size_t, POINTER(cef_binary_value_t), c_void_p, c_size_t, c_size_t)),
)
cef_dictionary_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t))),
    ('_is_owned', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t))),
    ('_is_equal', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t), c_int)),
    ('_get_size', CEFCALLBACK(c_size_t, POINTER(cef_dictionary_value_t))),
    ('_clear', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t))),
    ('_has_key', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_keys', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), cef_string_list_t)),
    ('_remove', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_type', CEFCALLBACK(CefValueType, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_value', CEFCALLBACK(POINTER(cef_value_t), POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_bool', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_int', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_double', CEFCALLBACK(c_double, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_string', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_binary', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_dictionary', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_get_list', CEFCALLBACK(POINTER(cef_list_value_t), POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_set_value', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_value_t))),
    ('_set_null', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t))),
    ('_set_bool', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), c_int)),
    ('_set_int', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), c_int)),
    ('_set_double', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), c_double)),
    ('_set_string', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_set_binary', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_binary_value_t))),
    ('_set_dictionary', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_dictionary_value_t))),
    ('_set_list', CEFCALLBACK(c_int, POINTER(cef_dictionary_value_t), POINTER(cef_string_t), POINTER(cef_list_value_t))),
)
cef_list_value_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_is_valid', CEFCALLBACK(c_int, POINTER(cef_list_value_t))),
    ('_is_owned', CEFCALLBACK(c_int, POINTER(cef_list_value_t))),
    ('_is_read_only', CEFCALLBACK(c_int, POINTER(cef_list_value_t))),
    ('_is_same', CEFCALLBACK(c_int, POINTER(cef_list_value_t), POINTER(cef_list_value_t))),
    ('_is_equal', CEFCALLBACK(c_int, POINTER(cef_list_value_t), POINTER(cef_list_value_t))),
    ('_copy', CEFCALLBACK(POINTER(cef_list_value_t), POINTER(cef_list_value_t))),
    ('_set_size', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t)),
    ('_get_size', CEFCALLBACK(c_size_t, POINTER(cef_list_value_t))),
    ('_clear', CEFCALLBACK(c_int, POINTER(cef_list_value_t))),
    ('_remove', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t)),
    ('_get_type', CEFCALLBACK(CefValueType, POINTER(cef_list_value_t), c_size_t)),
    ('_get_value', CEFCALLBACK(POINTER(cef_value_t), POINTER(cef_list_value_t), c_size_t)),
    ('_get_bool', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t)),
    ('_get_int', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t)),
    ('_get_double', CEFCALLBACK(c_double, POINTER(cef_list_value_t), c_size_t)),
    ('_get_string', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_list_value_t), c_size_t)),
    ('_get_binary', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_list_value_t), c_size_t)),
    ('_get_dictionary', CEFCALLBACK(POINTER(cef_dictionary_value_t), POINTER(cef_list_value_t), c_size_t)),
    ('_get_list', CEFCALLBACK(POINTER(cef_list_value_t), POINTER(cef_list_value_t), c_size_t)),
    ('_set_value', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, POINTER(cef_value_t))),
    ('_set_null', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t)),
    ('_set_bool', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, c_int)),
    ('_set_int', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, c_int)),
    ('_set_double', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, c_double)),
    ('_set_string', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, POINTER(cef_string_t))),
    ('_set_binary', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, POINTER(cef_binary_value_t))),
    ('_set_dictionary', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, POINTER(cef_dictionary_value_t))),
    ('_set_list', CEFCALLBACK(c_int, POINTER(cef_list_value_t), c_size_t, POINTER(cef_list_value_t))),
)
cef_x509cert_principal_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_display_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_x509cert_principal_t))),
    ('_get_common_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_x509cert_principal_t))),
    ('_get_locality_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_x509cert_principal_t))),
    ('_get_state_or_province_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_x509cert_principal_t))),
    ('_get_country_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_x509cert_principal_t))),
    ('_get_street_addresses', CEFCALLBACK(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t)),
    ('_get_organization_names', CEFCALLBACK(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t)),
    ('_get_organization_unit_names', CEFCALLBACK(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t)),
    ('_get_domain_components', CEFCALLBACK(c_void, POINTER(cef_x509cert_principal_t), cef_string_list_t)),
)
cef_x509certificate_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_get_subject', CEFCALLBACK(POINTER(cef_x509cert_principal_t), POINTER(cef_x509certificate_t))),
    ('_get_issuer', CEFCALLBACK(POINTER(cef_x509cert_principal_t), POINTER(cef_x509certificate_t))),
    ('_get_serial_number', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_x509certificate_t))),
    ('_get_valid_start', CEFCALLBACK(cef_time_t, POINTER(cef_x509certificate_t))),
    ('_get_valid_expiry', CEFCALLBACK(cef_time_t, POINTER(cef_x509certificate_t))),
    ('_get_derencoded', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_x509certificate_t))),
    ('_get_pemencoded', CEFCALLBACK(POINTER(cef_binary_value_t), POINTER(cef_x509certificate_t))),
    ('_get_issuer_chain_size', CEFCALLBACK(c_size_t, POINTER(cef_x509certificate_t))),
    ('_get_derencoded_issuer_chain', CEFCALLBACK(c_void, POINTER(cef_x509certificate_t), POINTER(c_size_t), POINTER(POINTER(cef_binary_value_t)))),
    ('_get_pemencoded_issuer_chain', CEFCALLBACK(c_void, POINTER(cef_x509certificate_t), POINTER(c_size_t), POINTER(POINTER(cef_binary_value_t)))),
)
cef_xml_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_move_to_next_node', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_close', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_has_error', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_get_error', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_type', CEFCALLBACK(CefXmlNodeType, POINTER(cef_xml_reader_t))),
    ('_get_depth', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_get_local_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_prefix', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_qualified_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_namespace_uri', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_base_uri', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_xml_lang', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_is_empty_element', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_has_value', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_get_value', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_has_attributes', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_get_attribute_count', CEFCALLBACK(c_size_t, POINTER(cef_xml_reader_t))),
    ('_get_attribute_byindex', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t), c_int)),
    ('_get_attribute_byqname', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t), POINTER(cef_string_t))),
    ('_get_attribute_bylname', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_get_inner_xml', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_outer_xml', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_xml_reader_t))),
    ('_get_line_number', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_move_to_attribute_byindex', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t), c_int)),
    ('_move_to_attribute_byqname', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t), POINTER(cef_string_t))),
    ('_move_to_attribute_bylname', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t), POINTER(cef_string_t), POINTER(cef_string_t))),
    ('_move_to_first_attribute', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_move_to_next_attribute', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
    ('_move_to_carrying_element', CEFCALLBACK(c_int, POINTER(cef_xml_reader_t))),
)
cef_zip_reader_t._fields_ = (
    ('_base', cef_base_ref_counted_t),
    ('_move_to_first_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t))),
    ('_move_to_next_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t))),
    ('_move_to_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t), POINTER(cef_string_t), c_int)),
    ('_close', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t))),
    ('_get_file_name', CEFCALLBACK(POINTER(cef_string_userfree_t), POINTER(cef_zip_reader_t))),
    ('_get_file_size', CEFCALLBACK(c_long, POINTER(cef_zip_reader_t))),
    ('_get_file_last_modified', CEFCALLBACK(cef_time_t, POINTER(cef_zip_reader_t))),
    ('_open_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t), POINTER(cef_string_t))),
    ('_close_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t))),
    ('_read_file', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t), c_void_p, c_size_t)),
    ('_tell', CEFCALLBACK(c_long, POINTER(cef_zip_reader_t))),
    ('_eof', CEFCALLBACK(c_int, POINTER(cef_zip_reader_t))),
)
# CreateBrowser
@ CEFENTRY(c_int, "cef_browser_host_create_browser", POINTER(cef_window_info_t), POINTER(cef_client_t), POINTER(cef_string_t), POINTER(cef_browser_settings_t), POINTER(cef_dictionary_value_t), POINTER(cef_request_context_t))
def browser_host_create_browser(windowInfo, client, url, settings, extra_info, request_context):
    return browser_host_create_browser._api_(windowInfo, client, url, settings, extra_info, request_context)

# CreateBrowserSync
@ CEFENTRY(POINTER(cef_browser_t), "cef_browser_host_create_browser_sync", POINTER(cef_window_info_t), POINTER(cef_client_t), POINTER(cef_string_t), POINTER(cef_browser_settings_t), POINTER(cef_dictionary_value_t), POINTER(cef_request_context_t))
def browser_host_create_browser_sync(windowInfo, client, url, settings, extra_info, request_context):
    return browser_host_create_browser_sync._api_(windowInfo, client, url, settings, extra_info, request_context)
# CreateCommandLine
@ CEFENTRY(POINTER(cef_command_line_t), "cef_command_line_create", )
def command_line_create():
    return command_line_create._api_()

# GetGlobalCommandLine
@ CEFENTRY(POINTER(cef_command_line_t), "cef_command_line_get_global", )
def command_line_get_global():
    return command_line_get_global._api_()
# GetGlobalManager
@ CEFENTRY(POINTER(cef_cookie_manager_t), "cef_cookie_manager_get_global_manager", POINTER(cef_completion_callback_t))
def cookie_manager_get_global_manager(callback):
    return cookie_manager_get_global_manager._api_(callback)
# Create
@ CEFENTRY(POINTER(cef_drag_data_t), "cef_drag_data_create", )
def drag_data_create():
    return drag_data_create._api_()
# CreateImage
@ CEFENTRY(POINTER(cef_image_t), "cef_image_create", )
def image_create():
    return image_create._api_()
# GetGlobalMediaRouter
@ CEFENTRY(POINTER(cef_media_router_t), "cef_media_router_get_global", POINTER(cef_completion_callback_t))
def media_router_get_global(callback):
    return media_router_get_global._api_(callback)
# CreateMenuModel
@ CEFENTRY(POINTER(cef_menu_model_t), "cef_menu_model_create", POINTER(cef_menu_model_delegate_t))
def menu_model_create(delegate):
    return menu_model_create._api_(delegate)
# Create
@ CEFENTRY(POINTER(cef_print_settings_t), "cef_print_settings_create", )
def print_settings_create():
    return print_settings_create._api_()
# Create
@ CEFENTRY(POINTER(cef_process_message_t), "cef_process_message_create", POINTER(cef_string_t))
def process_message_create(name):
    return process_message_create._api_(name)
# Create
@ CEFENTRY(POINTER(cef_request_t), "cef_request_create", )
def request_create():
    return request_create._api_()
# Create
@ CEFENTRY(POINTER(cef_post_data_t), "cef_post_data_create", )
def post_data_create():
    return post_data_create._api_()
# Create
@ CEFENTRY(POINTER(cef_post_data_element_t), "cef_post_data_element_create", )
def post_data_element_create():
    return post_data_element_create._api_()
# GetGlobalContext
@ CEFENTRY(POINTER(cef_request_context_t), "cef_request_context_get_global_context", )
def request_context_get_global_context():
    return request_context_get_global_context._api_()

# CreateContext
@ CEFENTRY(POINTER(cef_request_context_t), "cef_request_context_create_context", POINTER(cef_request_context_settings_t), POINTER(cef_request_context_handler_t))
def request_context_create_context(settings, handler):
    return request_context_create_context._api_(settings, handler)

# CreateContext
@ CEFENTRY(POINTER(cef_request_context_t), "cef_create_context_shared", POINTER(cef_request_context_t), POINTER(cef_request_context_handler_t))
def create_context_shared(other, handler):
    return create_context_shared._api_(other, handler)
# GetGlobal
@ CEFENTRY(POINTER(cef_resource_bundle_t), "cef_resource_bundle_get_global", )
def resource_bundle_get_global():
    return resource_bundle_get_global._api_()
# Create
@ CEFENTRY(POINTER(cef_response_t), "cef_response_create", )
def response_create():
    return response_create._api_()
# CreateServer
@ CEFENTRY(c_void, "cef_server_create", POINTER(cef_string_t), c_ushort, c_int, POINTER(cef_server_handler_t))
def server_create(address, port, backlog, handler):
    server_create._api_(address, port, backlog, handler)
# CreateForFile
@ CEFENTRY(POINTER(cef_stream_reader_t), "cef_stream_reader_create_for_file", POINTER(cef_string_t))
def stream_reader_create_for_file(fileName):
    return stream_reader_create_for_file._api_(fileName)

# CreateForData
@ CEFENTRY(POINTER(cef_stream_reader_t), "cef_stream_reader_create_for_data", c_void_p, c_size_t)
def stream_reader_create_for_data(data, size):
    return stream_reader_create_for_data._api_(data, size)

# CreateForHandler
@ CEFENTRY(POINTER(cef_stream_reader_t), "cef_stream_reader_create_for_handler", POINTER(cef_read_handler_t))
def stream_reader_create_for_handler(handler):
    return stream_reader_create_for_handler._api_(handler)
# CreateForFile
@ CEFENTRY(POINTER(cef_stream_writer_t), "cef_stream_writer_create_for_file", POINTER(cef_string_t))
def stream_writer_create_for_file(fileName):
    return stream_writer_create_for_file._api_(fileName)

# CreateForHandler
@ CEFENTRY(POINTER(cef_stream_writer_t), "cef_stream_writer_create_for_handler", POINTER(cef_write_handler_t))
def stream_writer_create_for_handler(handler):
    return stream_writer_create_for_handler._api_(handler)
# GetForCurrentThread
@ CEFENTRY(POINTER(cef_task_runner_t), "cef_task_runner_get_for_current_thread", )
def task_runner_get_for_current_thread():
    return task_runner_get_for_current_thread._api_()

# GetForThread
@ CEFENTRY(POINTER(cef_task_runner_t), "cef_task_runner_get_for_thread", CefThreadId)
def task_runner_get_for_thread(threadId):
    return task_runner_get_for_thread._api_(threadId)
# Create
@ CEFENTRY(POINTER(cef_urlrequest_t), "cef_urlrequest_create", POINTER(cef_request_t), POINTER(cef_urlrequest_client_t), POINTER(cef_request_context_t))
def urlrequest_create(request, client, request_context):
    return urlrequest_create._api_(request, client, request_context)
# GetCurrentContext
@ CEFENTRY(POINTER(cef_v8context_t), "cef_v8context_get_current_context", )
def v8context_get_current_context():
    return v8context_get_current_context._api_()

# GetEnteredContext
@ CEFENTRY(POINTER(cef_v8context_t), "cef_v8context_get_entered_context", )
def v8context_get_entered_context():
    return v8context_get_entered_context._api_()

# InContext
@ CEFENTRY(c_int, "cef_v8context_in_context", )
def v8context_in_context():
    return v8context_in_context._api_()
# CreateUndefined
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_undefined", )
def v8value_create_undefined():
    return v8value_create_undefined._api_()

# CreateNull
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_null", )
def v8value_create_null():
    return v8value_create_null._api_()

# CreateBool
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_bool", c_int)
def v8value_create_bool(value):
    return v8value_create_bool._api_(value)

# CreateInt
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_int", c_int)
def v8value_create_int(value):
    return v8value_create_int._api_(value)

# CreateUInt
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_uint", c_uint)
def v8value_create_uint(value):
    return v8value_create_uint._api_(value)

# CreateDouble
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_double", c_double)
def v8value_create_double(value):
    return v8value_create_double._api_(value)

# CreateDate
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_date", POINTER(cef_time_t))
def v8value_create_date(date):
    return v8value_create_date._api_(date)

# CreateString
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_string", POINTER(cef_string_t))
def v8value_create_string(value):
    return v8value_create_string._api_(value)

# CreateObject
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_object", POINTER(cef_v8accessor_t), POINTER(cef_v8interceptor_t))
def v8value_create_object(accessor, interceptor):
    return v8value_create_object._api_(accessor, interceptor)

# CreateArray
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_array", c_int)
def v8value_create_array(length):
    return v8value_create_array._api_(length)

# CreateArrayBuffer
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_array_buffer", c_void_p, c_size_t, POINTER(cef_v8array_buffer_release_callback_t))
def v8value_create_array_buffer(buffer, length, release_callback):
    return v8value_create_array_buffer._api_(buffer, length, release_callback)

# CreateFunction
@ CEFENTRY(POINTER(cef_v8value_t), "cef_v8value_create_function", POINTER(cef_string_t), POINTER(cef_v8handler_t))
def v8value_create_function(name, handler):
    return v8value_create_function._api_(name, handler)
# GetCurrent
@ CEFENTRY(POINTER(cef_v8stack_trace_t), "cef_v8stack_trace_get_current", c_int)
def v8stack_trace_get_current(frame_limit):
    return v8stack_trace_get_current._api_(frame_limit)
# Create
@ CEFENTRY(POINTER(cef_value_t), "cef_value_create", )
def value_create():
    return value_create._api_()
# Create
@ CEFENTRY(POINTER(cef_binary_value_t), "cef_binary_value_create", c_void_p, c_size_t)
def binary_value_create(data, data_size):
    return binary_value_create._api_(data, data_size)
# Create
@ CEFENTRY(POINTER(cef_dictionary_value_t), "cef_dictionary_value_create", )
def dictionary_value_create():
    return dictionary_value_create._api_()
# Create
@ CEFENTRY(POINTER(cef_list_value_t), "cef_list_value_create", )
def list_value_create():
    return list_value_create._api_()
# Create
@ CEFENTRY(POINTER(cef_xml_reader_t), "cef_xml_reader_create", POINTER(cef_stream_reader_t), CefXmlEncoding, POINTER(cef_string_t))
def xml_reader_create(stream, encodingType, URI):
    return xml_reader_create._api_(stream, encodingType, URI)
# Create
@ CEFENTRY(POINTER(cef_zip_reader_t), "cef_zip_reader_create", POINTER(cef_stream_reader_t))
def zip_reader_create(stream):
    return zip_reader_create._api_(stream)
